<div class="column-content controls active-block" id="settings">
    <div class="force alpha">
        <p><label>Simulation</label></p>
        <label for="simulation-tick-checkbox" title="Turning off drawing simulation significantly increases performance">
            Toggle Network Drawing Simulation
            <input id="simulation-tick-checkbox" type="checkbox" onchange="toggleSimulationTick(this.checked)" checked />
        </label>
        <button class="run-btn" id="reset-layout-btn" onclick="resetLayout()">Redraw Layout</button>
    </div>
    @* <div class="force">
        <p><label>Center</label> Shifts the view, so the graph is centered at this location.</p>
        <label>
            x
            <output id="center_XSliderOutput">.5</output>
            <input type="range" min="0" max="1" value=".5" step="0.01" oninput="handleForceChange(this.value, 'center_XSliderOutput', 'center', 'x', updateCenterForce);">
        </label>
        <label>
            y
            <output id="center_YSliderOutput">.5</output>
            <input type="range" min="0" max="1" value=".5" step="0.01" oninput="handleForceChange(this.value, 'center_YSliderOutput', 'center', 'y', updateCenterForce);">
        </label>
    </div> *@

    <div class="force">
        <p><label><input type="checkbox" id="charge_EnabledCheckbox" checked onchange="handleForceEnablement(this.checked, 'charge', updateChargeForce);"> Charge</label> Attracts (+) or repels (-) nodes to/from each other.</p>
        <label title="Negative strength repels nodes. Positive strength attracts nodes.">
            strength
            <output id="charge_StrengthSliderOutput">-80</output>
            <input type="range" min="-200" max="50" value="-80" step=".1" oninput="handleForceChange(this.value, 'charge_StrengthSliderOutput', 'charge', 'strength', updateChargeForce);">
        </label>
        <label title="Minimum distance where force is applied">
            distanceMin
            <output id="charge_distanceMinSliderOutput">1</output>
            <input type="range" min="0" max="50" value="1" step=".1" oninput="handleForceChange(this.value, 'charge_DistanceMinSliderOutput', 'charge', 'distanceMin', updateChargeForce);">
        </label>
        <label title="Maximum distance where force is applied">
            distanceMax
            <output id="charge_distanceMaxSliderOutput">2000</output>
            <input type="range" min="0" max="2000" value="2000" step=".1" oninput="handleForceChange(this.value, 'charge_DistanceMaxSliderOutput', 'charge', 'distanceMax', updateChargeForce);">
        </label>
    </div>

    <div class="force">
        <p><label><input type="checkbox" id="collide_EnabledCheckbox" checked onchange="handleForceEnablement(this.checked, 'collide', updateCollideForce);"> Collide</label> Prevents nodes from overlapping</p>
        <label>
            strength
            <output id="collide_StrengthSliderOutput">.7</output>
            <input type="range" min="0" max="2" value=".7" step=".1" oninput="handleForceChange(this.value, 'collide_StrengthSliderOutput', 'collide', 'strength', updateCollideForce);">
        </label>
        <label title="Size of nodes">
            radius
            <output id="collide_radiusSliderOutput">8</output>
            <input type="range" min="0" max="100" value="8" step="1" oninput="currentGraph.setPreviousRadius(); handleForceChange(this.value, 'collide_radiusSliderOutput', 'collide', 'radius', updateCollideForce); setNodeFontSize();">
        </label>
        <label title="Higher values increase rigidity of the nodes (WARNING: high values are computationally expensive)">
            iterations
            <output id="collide_iterationsSliderOutput">1</output>
            <input type="range" min="1" max="10" value="1" step="1" oninput="handleForceChange(this.value, 'collide_iterationsSliderOutput', 'collide', 'iterations', updateCollideForce);">
        </label>
    </div>


    <div class="force">
        <p><label><input type="checkbox" id="link_EnabledCheckbox" checked onchange="    handleForceEnablement(this.checked, 'link', updateLinkForce);"> Link</label> Sets link length</p>
        <label title="The force will push/pull nodes to make links this long">
            distance
            <output id="link_DistanceSliderOutput">75</output>
            <input type="range" min="0" max="100" value="75" step="1" oninput="handleForceChange(this.value, 'link_DistanceSliderOutput', 'link', 'distance', updateLinkForce);">
        </label>
        <label title="Higher values increase rigidity of the links (WARNING: high values are computationally expensive)">
            iterations
            <output id="link_IterationsSliderOutput">1</output>
            <input type="range" min="1" max="10" value="1" step="1" oninput="handleForceChange(this.value, 'link_IterationsSliderOutput', 'link', 'iterations', updateLinkForce);">
        </label>
    </div>
    <div style="visibility:hidden" class="force">
        <p><label>Project</label> Modify position of a node based on its attribute value</p>
        <label class="attribute-selection-label" for="project-x-attributes">
            X Axis
            <select id="project-x-attributes" class="attribute-select attribute-select-border" name="project-x-attributes" onchange="projectAttributeXAxis(this);">
                <option value="">--None--</option>
                <optgroup label="Attributes">
                    @foreach (var key in Model.GraphModel.Mvn.VectorData.NumAtrrExtremes.Keys)
                    {
                        <option value="@key">@key</option>
                    }
                </optgroup>
                <optgroup label="Centralities">
                    <option value="degree">Degree</option>
                    <option value="closeness">Closeness</option>
                </optgroup>
            </select>
        </label>

        <label class="attribute-selection-label" for="project-y-attributes">
            Y Axis
            <select id="project-y-attributes" class="attribute-select attribute-select-border" name="project-y-attributes" onchange="projectAttributeYAxis(this);">
                <option value="">--None--</option>
                <optgroup label="Attributes">
                    @foreach (var key in Model.GraphModel.Mvn.VectorData.NumAtrrExtremes.Keys)
                    {
                        <option value="@key">@key</option>
                    }
                </optgroup>
                <optgroup label="Centralities">
                    <option value="degree">Degree</option>
                    <option value="closeness">Closeness</option>
                </optgroup>
            </select>
        </label>

    </div>
    
    
    
</div>
