@model MultiVariateNetworkExplorer2.Models.ApplicationModels

<section class="mvn-input" id="mvn-input-section">
    <form method="post" asp-action="LoadGraph" asp-controller="Home" enctype="multipart/form-data" id="mvn-input-form" name="mvn-input-form" onsubmit="return validateNewNetworkForm(this);">
        <div class="file-buttons">
            <div class="file-button">
                <input class="inputfile" type="file" id="fileVector" name="InputModel.Files" data-caption="{filePath}"/>
                <label for="fileVector"><strong>Choose a file with vector data</strong></label>
                <span class="text-tooltip">Tooltip</span>
                
            </div>
            <div class="file-button">
                <input class="inputfile" type="file"  id="fileNetwork" name="InputModel.Files" data-caption="{filePath}" />
                <label for="fileNetwork"><strong>Choose a file with network</strong></label>
                <span class="text-tooltip">Tooltip</span>
            </div>
        </div>
        <div class="parameters">
            <div class="collapsible-parameters-btn">
                <i class='fa fa-chevron-up'></i>
                <span>Data parameters</span>
            </div>
            <div class="collapsible-parameters-content">
                <label asp-for="InputModel.Directed"><span>Is the network directed?</span></label>
                <select asp-for="InputModel.Directed" asp-items="Model.InputModel.YesNoList"></select> 

                <label asp-for="InputModel.Header"><span>Does the vector data file contain headers?</span></label>
                <select asp-for="InputModel.Header" asp-items="Model.InputModel.YesNoList"></select>

                
                <label asp-for="InputModel.MissingValues">
                    <span>Enter the character representing missing data (leave empty if no character is used)</span>
                </label>
                <input type="text" asp-for="InputModel.MissingValues" value="na" placeholder="eg: -, --, NA etc."/>
            </div>
            <div class="collapsible-parameters-btn">
                <i class='fa fa-chevron-up'></i>
                <span>Separators</span>
            </div>
            <div class="collapsible-parameters-content">
                <label asp-for="InputModel.Separators">Enter the data separating characters(separated by SPACE):</label>
                @Html.TextBoxFor(m => m.InputModel.Separators)
            </div>

            <div class="collapsible-parameters-btn">
                <i class='fa fa-chevron-up'></i>
                <span>Group and Id Parameters</span>
            </div>
            <div class="collapsible-parameters-content">
                <label asp-for="InputModel.CommunityDetection">Initialize with community detection</label>
                <select asp-for="InputModel.CommunityDetection" asp-items="Model.InputModel.YesNoList"></select>

                <label asp-for="InputModel.GroupColumnName">Enter the column name or number with groups (optional)</label>
                @Html.TextBoxFor(m => m.InputModel.GroupColumnName)

                <label asp-for="InputModel.IdColumnName">Enter the column name or number with ids (optional)</label>
                @Html.TextBoxFor(m => m.InputModel.IdColumnName)
            </div>
            
            <div class="collapsible-parameters-btn">
                <i class='fa fa-chevron-up'></i>
                <span>Conversion Parameters</span>
            </div>
            <div class="collapsible-parameters-content" id="conversion-collapsible-content">
                <h4 id="algorithm-parameters-headline">Algorithm Parameters</h4>
                <label asp-for="InputModel.ConversionAlgorithmName">Choose a conversion algorithm:</label>
                <select asp-for="InputModel.ConversionAlgorithmName" asp-items="Model.InputModel.AlgorithmList" onchange="displayAlgorithmParameters(this.id, '-parameters')"></select>

                <div class="algorithm-parameters-container">
                    <div class="algorithm-parameters" id="lrnet-parameters">

                        <label asp-for="InputModel.ConversionAlgorithmParams[0]">Choose a reduction coefficient</label>
                        <input type="number" asp-for="InputModel.ConversionAlgorithmParams[0]" min="0.1" step="0.1" max="10" value="1"/>

                        <label asp-for="InputModel.ConversionAlgorithmParams[1]">Choose a minimal number of neighbours</label>
                        <input type="number" asp-for="InputModel.ConversionAlgorithmParams[1]" min="0" max="20" step="1" value="1" />
                    </div>

                    <div class="algorithm-parameters" id="epsilonknn-parameters">
                        <label asp-for="InputModel.ConversionAlgorithmParams[0]">Choose a radius</label>
                        <input type="number" asp-for="InputModel.ConversionAlgorithmParams[0]" step="0.00001" min="0" max="1" value="1" />

                        <label asp-for="InputModel.ConversionAlgorithmParams[1]">Choose a minimal number of neighbours</label>
                        <input type="number" asp-for="InputModel.ConversionAlgorithmParams[1]" min="0" value="1" />
                    </div>
                </div>

                <h4 id="metric-parameters-headline">Metric Parameters</h4>
                <label asp-for="InputModel.MetricName">Choose a metric:</label>
                <select asp-for="InputModel.MetricName" asp-items="Model.InputModel.MetricList" onchange=" displayMetricParameters(this.id)"></select>

                <div class="metric-parameters-container">
                    <div class="metric-parameters" id="gauss-parameters">
                        <label asp-for="InputModel.MetricParams[0]">Choose a standard deviation</label>
                        <input type="number" asp-for="InputModel.MetricParams[0]" step="0.001" min="0" value="1" />
                    </div>
                </div>

                @Html.LabelFor(m => m.InputModel.Nulify, "Nulify?")
                @Html.CheckBoxFor(m => m.InputModel.Nulify)

                <input type="hidden" id="current-graph" name="current-graph" />
            </div>
        </div>
        <div class="submit-buttons">
            <input type="submit" class="submit-btn" value="Upload" />
            @*<input type="button" class="clear-btn" value="Clear" />*@
        </div>
        <p id="new-network-error-para" class="error-display"></p>
    </form>

    <form method="post" asp-action="LoadAndAppendNodes" asp-controller="Home" enctype="multipart/form-data" id="mvn-append-form" onsubmit="return validateAppendNetworkForm(this)">
        <div class="file-buttons">
            <div class="file-button">
                <input class="inputfile" type="file" id="fileVectorAppend" name="files" data-caption="{filePath}">
                <label for="fileVectorAppend"><strong>Choose a file with vector data</strong></label>
            </div>
        </div>
        <div class="parameters">
            <div class="collapsible-parameters-btn">
                <i class='fas fa-chevron-up'></i>
                <span>Data parameters</span>
            </div>
            <div class="collapsible-parameters-content">
                <label for="header"><span>Does the vector data file contain headers?</span></label>
                <select name="header" id="header">
                    <option selected value="0">Yes</option>
                    <option value="1">No</option>
                </select>

                <label for="missingvalues"><span>Enter the character representing missing data (leave empty if no character is used)</span></label>
                <input type="text" id="missingvaluesAppend" name="missingvalues" placeholder="eg: -, --, NA etc." />
            </div>
            <div class="collapsible-parameters-btn">
                <i class='fas fa-chevron-up'></i>
                <span>Separators</span>
            </div>
            <div class="collapsible-parameters-content">
                <label for="separators">Enter the data separating characters (separated by SPACE):</label>
                <input type="text" id="separatorsAppend" name="separators" />
            </div>

            <div class="collapsible-parameters-btn">
                <i class='fas fa-chevron-up'></i>
                <span>Conversion Parameters</span>
            </div>
            <div class="collapsible-parameters-content" id="conversion-collapsible-content">

                <h4 id="algorithm-parameters-headline">Algorithm Parameters</h4>
                <label for="convert">Choose a conversion algorithm:</label>
                <select name="convert" id="append-convert" onchange="displayAlgorithmParameters(this.id, '-parameters-append')">
                    <option value="LRNet">LRNet</option>
                    <option value="EpsilonKNN">Epsilon and kNN</option>
                </select>

                <div class="algorithm-parameters-container">
                    <div class="algorithm-parameters" id="lrnet-parameters-append">
                        <label for="lrnet-reduction">Choose a reduction coefficient</label>
                        <input type="number" id="lrnet-reduction" name="algsParams" min="0.1" max="10" value="1" />

                        <label for="lrnet-kNNmin">Choose a minimal number of neighbours</label>
                        <input type="number" id="lrnet-kNNmin" name="algsParams" min="0" max="20" step="1" value="1" />

                        
                    </div>

                    <div class="algorithm-parameters" id="epsilon-parameters-append">
                        <label for="epsilonRadius">Choose a radius</label>
                        <input type="number" id="epsilonRadius" name="algsParams" step="0.00001" min="0" max="1" value="1" />

                        <label for="kNNmin">Choose a minimal number of neighbours</label>
                        <input type="number" id="kNNmin" name="algsParams" min="0" max="20" step="1" value="1" />
                    </div>
                </div>

                <h4 id="metric-parameters-headline">Metric Parameters</h4>
                <label for="convert">Choose a metric:</label>
                <select name="metric" id="append-metric" onchange="displayMetricParameters(this.id)">
                    <option value="GaussKernel">Gaussian Kernel</option>
                    <option value="CosineSimilarity">Cosine Similarity</option>
                    <option value="PearsonCorrelation">Pearson Correlation</option>
                    <option value="EuclideanKernel">Euclidean Distance</option>
                </select>

                <div class="metric-parameters-container">
                    <div class="metric-parameters" id="gauss-parameters">
                        <label for="sigma">Choose a standard deviation</label>
                        <input type="number" id="sigma" name="metricParams" step="0.001" min="0" value="1" />
                    </div>
                    @Html.LabelFor(m => m.InputModel.Nulify, "Nulify?")
                    @Html.CheckBoxFor(m => m.InputModel.Nulify)
                    
                </div>

                <input type="hidden" id="currentGraph" name="currentGraph" />
            </div>
        </div>
        <div class="submit-buttons">
            <input type="submit" class="submit-btn" value="Upload" />
            @*<input type="button" class="clear-btn" value="Clear"/>*@
        </div>
        <p id="append-network-error-para" class="error-display"></p>
    </form>
</section>