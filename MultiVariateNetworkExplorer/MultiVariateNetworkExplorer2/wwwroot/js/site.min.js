const toggleNetworkInput=function(){$("#mvn-input-section").toggleClass("active-block");hideAllInputForms()},hideAllInputForms=function(){$("#mvn-input-section form.active-flex").removeClass("active-flex")},openNetworkInputForm=function(formId){toggleNetworkInput();$("#"+formId).addClass("active-flex")},addCollapsibleEventListeners=function(){const parameter_collapsibles=document.getElementsByClassName("collapsible-parameters-btn");for(const parameter_collapsible of parameter_collapsibles)parameter_collapsible.addEventListener("click",function(){this.classList.toggle("collapsible-parameters-btn-active");const content=this.nextElementSibling;content.style.height=content.clientHeight?0:content.scrollHeight+"px"})},addFileButtonsEventListeners=function(){const inputs=document.getElementsByClassName("inputfile");for(const input of inputs){const label=input.nextElementSibling,labelTextElement=label.firstElementChild,labelVal=labelTextElement.innerHTML,labelTooltip=label.nextElementSibling;input.addEventListener("change",function(e){let fileName="";fileName=e.target.value.split("\\").pop();fileName?(labelTextElement.innerText=fileName,labelTooltip.innerHTML=fileName,label.style.backgroundColor="green"):labelTextElement.innerText=labelVal});label.addEventListener("mouseover",function(){label.style.backgroundColor==="green"&&(labelTooltip.style.visibility="visible")});label.addEventListener("mouseout",function(){labelTooltip.style.visibility="hidden"})}},selectFocusIn=function(select_element){select_element.style.textAlign="left"},selectFocusOut=function(select_element){select_element.style.textAlign="center"},recalculateCollapsibleContentHeight=function(collapsible_content_id){const content=document.getElementById(collapsible_content_id);content.style.height="auto"},hideConversionParameters=function(parameter_container,parameter_div_class){const parameters_divs=parameter_container.querySelectorAll("."+parameter_div_class);for(const parameters_div of parameters_divs){parameters_div.style.display="none";const inputs=parameters_div.querySelectorAll("input");for(const input of inputs)input.disabled=!0}},displayParametersElements=function(parameter_container,parameter_div_id){const parameters_div=parameter_container.querySelector("#"+parameter_div_id);parameters_div.style.display="grid";const inputs=parameters_div.querySelectorAll("input");for(const input of inputs)input.disabled=!1},displayMetricParameters=function(metricSelectId){const metric_select=document.getElementById(metricSelectId),metric_select_value=metric_select.value,parameter_container=metric_select.nextElementSibling;hideConversionParameters(parameter_container,"metric-parameters");switch(metric_select_value){case"GaussKernel":displayParametersElements(parameter_container,"gauss-parameters")}},displayAlgorithmParameters=function(algorithmSelectId,parameterDivSuffix){const algorithm_select=document.getElementById(algorithmSelectId),algorithm_parameter_id=algorithm_select.value.toLowerCase()+parameterDivSuffix,parameter_container=algorithm_select.nextElementSibling;hideConversionParameters(parameter_container,"algorithm-parameters");displayParametersElements(parameter_container,algorithm_parameter_id)},selectDropDownOption=function(dropDownId,optionValue){document.getElementById(dropDownId).querySelector(`option[value="${optionValue}"]`).setAttribute("selected","selected")},prepareInputForm=function(){addFileButtonsEventListeners();addCollapsibleEventListeners();displayMetricParameters("InputModel_MetricName");displayAlgorithmParameters("InputModel_ConversionAlgorithmName","-parameters");displayMetricParameters("append-metric");displayAlgorithmParameters("append-convert","-parameters-append");selectDropDownOption("InputModel_Directed",1);selectDropDownOption("InputModel_CommunityDetection",1);const mvn_input_section=document.getElementById("mvn-input-section");mvn_input_section.addEventListener("click",toggleNetworkInput);for(const form of mvn_input_section.querySelectorAll("form"))form.addEventListener("click",function(e){e.stopPropagation()});$("mvn-input-form").on("submit",function(e){e.preventDefault();const isValid=validateNewNetworkForm(this);return isValid&&$.ajax({type:"POST",contentType:"application/x-www-form-urlencoded; charset=UTF-8",url:"/Home/LoadGraph",data:formData}),isValid});$("#mvn-append-form").submit(function(e){const current_graph_input=e.currentTarget.querySelector("#currentGraph");current_graph_input.value=JSON.stringify(store)})},isNullOrEmpty=function(string){return string===null||string===""},validateNewNetworkForm=function(form){let isValid=!0,errorMessage="";const vectorFile=form.querySelector("#fileVector").value;isNullOrEmpty(vectorFile)&&(errorMessage+="Please insert the vector file.<br>",isValid=!1);const separators=form.querySelector("#InputModel_Separators").value;isNullOrEmpty(separators)&&(errorMessage+="Please enter the data separating character.<br>",isValid=!1);const missingValues=form.querySelector("#InputModel_MissingValues").value;isNullOrEmpty(missingValues)&&(errorMessage+="Please enter the string which will represents missing values.<br>",isValid=!1);const errorParagraph=form.querySelector("#new-network-error-para");return errorParagraph.innerHTML=errorMessage,isValid},validateAppendNetworkForm=function(form){let isValid=!0,errorMessage="";graph.nodes.length<=0&&(errorMessage+="There is no graph to append to.<br>",isValid=!1);const vectorFile=form.querySelector("#fileVectorAppend").value;isNullOrEmpty(vectorFile)&&(errorMessage+="Please insert the vector file.<br>",isValid=!1);const separators=form.querySelector("#separatorsAppend").value;isNullOrEmpty(separators)&&(errorMessage+="Please enter the data separating character.<br>",isValid=!1);const missingValues=form.querySelector("#missingvaluesAppend").value;isNullOrEmpty(missingValues)&&(errorMessage+="Please enter the string which will represents missing values.<br>",isValid=!1);const errorParagraph=form.querySelector("#append-network-error-para");return errorParagraph.innerHTML=errorMessage,isValid},closeAllToolbarPanels=function(){$(".toolbar-panel.active-flex").removeClass("active-flex")},toggleToolPanel=function(e,toolPanelId){e.stopPropagation();closeAllToolbarPanels();$("#"+toolPanelId).toggleClass("active-flex")},openFileBrowser=function(inputId){document.getElementById(inputId).click()},isLower=function(value1,value2){return value1<value2},isGreater=function(value1,value2){return value1>value2};class FilterCondition{constructor(booleanFunction){this.booleanFunction=booleanFunction}}const lower=new FilterCondition(isLower),greater=new FilterCondition(isGreater),filterByValue=function(input,filteredAttributeName,filterCondition,minmax){let value=parseFloat(input.value);const extremeValue=parseFloat(minmax?input.max:input.min),filterSuffix=minmax?"_max":"_min",attributeFilterType=minmax?"high":"low";filterCondition.booleanFunction(value,extremeValue)&&(value=extremeValue,input.value=extremeValue);const{nodeData:storeNodes,linkData:storeLinks}=dataStore,{nodes:graphNodes,links:graphLinks}=currentGraph,nodeFiltersAttributeName="filters",linkFilteredName="filtered";for(let i=graphNodes.length-1;i>-1;i--){const n=graphNodes[i],nodeId=n.id,attributeValue=currentGraph.getNodeDataValue(nodeId,filteredAttributeName);if(attributeValue!==""&&filterCondition.booleanFunction(attributeValue,value)){currentGraph.getNodeDataValue(n.id,nodeFiltersAttributeName)||(dataStore.addNewNodeAttribute(nodeId,nodeFiltersAttributeName,[]),graphNodes.splice(i,1),filterNodeList.push(nodeId));const filters=currentGraph.getNodeDataValue(n.id,nodeFiltersAttributeName);filters.includes(filteredAttributeName+filterSuffix)||filters.push(filteredAttributeName+filterSuffix)}}for(let i=graphLinks.length-1;i>-1;i--){const l=graphLinks[i],source=currentGraph.getLinkDataValue(l.id,"source"),target=currentGraph.getLinkDataValue(l.id,"target");(filterNodeList.includes(source)||filterNodeList.includes(target))&&(dataStore.addNewLinkAttribute(l.id,linkFilteredName,!0),graphLinks.splice(i,1))}for(const[n,nodeData]of Object.entries(storeNodes)){const{[filteredAttributeName]:filAttrVal}=nodeData;if(filAttrVal!==""){const{filters}=nodeData;if(!filterCondition.booleanFunction(filAttrVal,value)&&filters&&filters.length>0){for(let i=filters.length-1;i>-1;i--){const filterName=filters[i];filterName===`${filteredAttributeName}${filterSuffix}`&&filters.splice(i,1)}if(filters.length===0){const returningNode={id:n};graphNodes.push(returningNode);filterNodeList.splice(filterNodeList.indexOf(n),1);delete nodeData.filters}}}}for(const[id,l]of Object.entries(storeLinks)){const{source,target}=l;if(!(filterNodeList.includes(source)||filterNodeList.includes(target))&&l.filtered){const returningLink={id:id,source:source,target:target};graphLinks.push(returningLink);dataStore.removeLinkAttribute(id,linkFilteredName)}}updateNodesAndLinks();startSimulation()},filterByCategory=function(filteredAttributeName,category,checked){const{nodeData:storeNodes,linkData:storeLinks}=dataStore,{nodes:graphNodes,links:graphLinks}=currentGraph,nodeFiltersAttributeName="filters",linkFilteredName="filtered";if(!checked){for(let i=graphNodes.length-1;i>-1;i--){const n=graphNodes[i],nodeId=n.id,attributeValue=currentGraph.getNodeDataValue(nodeId,filteredAttributeName);if(attributeValue===category){currentGraph.getNodeDataValue(n.id,nodeFiltersAttributeName)||(dataStore.addNewNodeAttribute(nodeId,nodeFiltersAttributeName,[]),graphNodes.splice(i,1),filterNodeList.push(nodeId));const filters=currentGraph.getNodeDataValue(n.id,nodeFiltersAttributeName);filters.includes(`${filteredAttributeName}_${category}`)||filters.push(`${filteredAttributeName}_${category}`)}}for(let i=graphLinks.length-1;i>-1;i--){const l=graphLinks[i],source=currentGraph.getLinkDataValue(l.id,"source"),target=currentGraph.getLinkDataValue(l.id,"target");(filterNodeList.includes(source)||filterNodeList.includes(target))&&(dataStore.addNewLinkAttribute(l.id,linkFilteredName,!0),graphLinks.splice(i,1))}updateNodesAndLinks();startSimulation();return}for(const[n,nodeData]of Object.entries(storeNodes)){const{[filteredAttributeName]:filAttrVal}=nodeData;if(filAttrVal==="")return;const{filters}=nodeData;if(filAttrVal===category&&filters&&filters.length>0){for(let i=filters.length-1;i>-1;i--){const filterName=filters[i];filterName===`${filteredAttributeName}_${category}`&&filters.splice(i,1)}if(filters.length===0){const returningNode={id:n};graphNodes.push(returningNode);filterNodeList.splice(filterNodeList.indexOf(n),1);delete nodeData.filters}}}for(const[id,l]of Object.entries(storeLinks)){const{source,target}=l;if(!(filterNodeList.includes(source)||filterNodeList.includes(target))&&l.filtered){const returningLink={id:id,source:source,target:target};graphLinks.push(returningLink);dataStore.removeLinkAttribute(id,linkFilteredName)}}updateNodesAndLinks();startSimulation()},handleForceEnablement=function(value,force,forceUpdateDelegate){currentGraph.setForcePropertyValue(force,"enabled",value);forceUpdateDelegate();startSimulation()},handleForceChange=function(value,sliderOutputId,force,property,forceUpdateDelegate){d3.select("#"+sliderOutputId).text(value);currentGraph.setForcePropertyValue(force,property,Number(value));forceUpdateDelegate();startSimulation()},getNodeAttribute=function(d,attributeName){return currentGraph.getNodeDataValue(d.id,attributeName)},getNodeProperty=function(d,attributeName){return currentGraph.getPropertyValue(d.id,attributeName)},enableNodeLabels=function(){nodeText.classed("invisible",!nodeVisualProperties.labels.enabled)},setNodeLabel=function(selectElement){const attributeName=selectElement.value,optgroup=selectElement.options[selectElement.selectedIndex].closest("optgroup");if(nodeVisualProperties.labels.attribute=attributeName,attributeName===""){nodeText.style("display","none");return}nodeText.style("display","block");let getValueFunction=getNodeAttribute;if(attributeName==="id"){nodeText.text(function(d){return d.id});return}if(optgroup!==null){const optGroupLabel=optgroup.getAttribute("label");optGroupLabel==="Centralities"&&(getValueFunction=getNodeProperty)}nodeText.text(function(d){return getValueFunction(d,attributeName)})},setAttributeNodeSizing=function(selectElement){const attributeName=selectElement.value,defaultRadius=currentGraph.getForcePropertyValue(Graph.forceNames.collide,"radius");if(nodeVisualProperties.sizing.attribute=attributeName,attributeName!==""){nodeVisualProperties.sizing.enabled=!0;const optgroup=selectElement.options[selectElement.selectedIndex].closest("optgroup").getAttribute("label");let attributeMax=null,attributeMin=null,getValueFunction=null;optgroup==="Attributes"?(attributeMax=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("max")),attributeMin=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("min")),getValueFunction=getNodeAttribute):optgroup==="Centralities"&&(attributeMax=currentGraph.getPropertyAttributeValue(attributeName,"max"),attributeMin=currentGraph.getPropertyAttributeValue(attributeName,"min"),getValueFunction=getNodeProperty);node.attr("r",function(d){const attributeValue=getValueFunction(d,attributeName);if(attributeValue=="")return d.r=defaultRadius/2;const resultRadius=defaultRadius*2*((parseFloat(attributeValue)-attributeMin)/(attributeMax-attributeMin))+1;return d.r=resultRadius});setNodeFontSize();return}nodeVisualProperties.sizing.enabled=!1;node.attr("r",function(d){return d.r=defaultRadius});setNodeFontSize()},rgbObjectToString=function(rgbObject){return"rgb("+rgbObject.r+", "+rgbObject.g+", "+rgbObject.b+")"},pickHex=function(color1,color2,weight){const w2=weight,w1=1-w2;return{r:Math.round(color1.r*w1+color2.r*w2),g:Math.round(color1.g*w1+color2.g*w2),b:Math.round(color1.b*w1+color2.b*w2)}},changeAttributeGradientColouringFromSettings=function(attributeSelectId){const attributeSelect=document.getElementById(attributeSelectId),optgroup=attributeSelect.options[attributeSelect.selectedIndex].closest("optgroup").getAttribute("label"),attributeName=attributeSelect.value;let attributeMax=null,attributeMin=null,getValueFunction=null;optgroup==="Numeric Attributes"?(attributeMax=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("max")),attributeMin=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("min")),getValueFunction=getNodeAttribute):(attributeMax=currentGraph.getPropertyAttributeValue(attributeName,"max"),attributeMin=currentGraph.getPropertyAttributeValue(attributeName,"min"),getValueFunction=getNodeProperty);const gradientStopColours=d3.selectAll(`#attribute-node-colouring-preview-gradient stop`),colourObject=[];gradientStopColours.each(function(){const colour=d3.select(this).attr("stop-color"),offset=d3.select(this).attr("offset"),attributeRange=attributeMax-attributeMin,valueThreshold=attributeMin+attributeRange*offset;colourObject.push({value:valueThreshold,colour:hexToRgb(colour)})});nodeVisualProperties.colouring.lastColouringType="gradient";setAttributeGradientColouring(attributeName,optgroup,getValueFunction,colourObject,attributeMin,attributeMax)},saveAttributeGradientColouring=function(attributeSelectId,lowColourId,highColourId){const attributeSelect=document.getElementById(attributeSelectId),optgroup=attributeSelect.options[attributeSelect.selectedIndex].closest("optgroup").getAttribute("label"),attributeName=attributeSelect.value,lowColour=document.getElementById(lowColourId),highColour=document.getElementById(highColourId)},getGradientColour=function(colourObject,attributeValue,attributeMin,attributeMax){const firstColour=colourObject[0];if(attributeValue<=firstColour.value)return firstColour.colour;let lowValueColourRGB=null,highValueColourRGB=null;for(let i=1;i<colourObject.length;i++)if(attributeValue<=colourObject[i].value){lowValueColourRGB=colourObject[i-1].colour;highValueColourRGB=colourObject[i].colour;const resultValue=(parseFloat(attributeValue)-attributeMin)/(attributeMax-attributeMin);return pickHex(lowValueColourRGB,highValueColourRGB,resultValue)}const lastColour=colourObject[colourObject.length-1];return lastColour.colour},setAttributeGradientColouring=function(attributeName,optgroup,valueFunction,colourObject,attributeMin,attributeMax){node.style("fill",function(d){const attributeValue=valueFunction(d,attributeName);if(attributeValue==="")return nodeVisualProperties.colouring.network;const finalColour=getGradientColour(colourObject,attributeValue,attributeMin,attributeMax),lightness=fontLightness(finalColour),node_text=$("#"+d.id+"_node_text");return node_text.css("fill","hsl(0, 0%, "+String(lightness)+"%)"),rgbObjectToString(finalColour)});link.style("stroke",nodeVisualProperties.colouring.network)},updateGradientLegend=function(legendDivId,colourListId){const legendSvg=d3.select(`#${legendDivId}`).select("svg"),linearGradient=legendSvg.select("linearGradient"),jColourListInputs=$(`#${colourListId} input`),colourCount=jColourListInputs.length,colourData=[];let offset=0;const offsetIncrement=1/(colourCount-1);jColourListInputs.each(function(){const colour=$(this).val();colourData.push({offset:offset,colour:colour});offset+=offsetIncrement});colourData[colourData.length-1].offset=1;const stopColours=linearGradient.html("").selectAll("stop").data(colourData).enter().append("stop").attr("offset",function(d){return d.offset}).attr("stop-color",function(d){return d.colour});updateGradientLegendPointers(legendSvg,stopColours)},stopColourPolygonDragged=function(d){const{dx}=d3.event;d.x+=dx;d.x=Math.max(10,Math.min(d.x,410));const{stopIndex,previousPointerData:prev,nextPointerData:next}=d,colourInputs=document.querySelectorAll("#numerical-colour-list input");if(dx<0&&prev!==null&&d.x<prev.x){const{previousPointerData:prevPrev}=prev,leftColour=colourInputs[prev.stopIndex].value,rightColour=colourInputs[stopIndex].value;colourInputs[stopIndex].value=leftColour;colourInputs[prev.stopIndex].value=rightColour;[d.stopIndex,d.previousPointerData.stopIndex]=[d.previousPointerData.stopIndex,d.stopIndex];prevPrev!==null&&(prevPrev.nextPointerData=d);d.previousPointerData=prevPrev;d.nextPointerData=prev;prev.previousPointerData=d;prev.nextPointerData=next;next!==null&&(next.previousPointerData=prev);const stopColour=document.querySelector(`#attribute-node-colouring-preview stop:nth-child(${prev.stopIndex+1})`);stopColour.setAttribute("offset",(prev.x-10)/400)}if(dx>0&&next!==null&&d.x>next.x){const{nextPointerData:nextNext}=next,leftColour=colourInputs[stopIndex].value,rightColour=colourInputs[next.stopIndex].value;colourInputs[stopIndex].value=rightColour;colourInputs[next.stopIndex].value=leftColour;[d.stopIndex,d.nextPointerData.stopIndex]=[d.nextPointerData.stopIndex,d.stopIndex];nextNext!==null&&(nextNext.previousPointerData=d);d.nextPointerData=nextNext;d.previousPointerData=next;next.nextPointerData=d;next.previousPointerData=prev;prev!==null&&(prev.nextPointerData=next);const stopColour=document.querySelector(`#attribute-node-colouring-preview stop:nth-child(${next.stopIndex+1})`);stopColour.setAttribute("offset",(next.x-10)/400)}d3.select(this).attr("transform",`translate(${d.x}, 0)`)},stopColourPolygonDragEnded=function(d){const{}=d3.event,legendDivId="attribute-node-colouring-preview",stops=document.querySelectorAll(`#${legendDivId} linearGradient stop`),newStopOffset=(d.x-10)/400;stops[d.stopIndex].setAttribute("offset",newStopOffset);const{previousPointerData:prev,nextPointerData:next}=d;if(prev!==null){const newPrevStopOffset=(prev.x-10)/400;stops[prev.stopIndex].setAttribute("offset",newPrevStopOffset)}if(next!==null){const newNextStopOffset=(next.x-10)/400;stops[next.stopIndex].setAttribute("offset",newNextStopOffset)}updateGradientColour(legendDivId,"numerical-colour-list")},updateGradientColour=function(){const linearGradient=d3.select(`#attribute-node-colouring-preview`).select("svg").select("linearGradient"),jColourListInputs=document.querySelectorAll(`#numerical-colour-list input`);linearGradient.selectAll("stop").attr("stop-color",function(d,i){return jColourListInputs[i].value})},updateGradientLegendPointers=function(legendSvg,stopColours){legendSvg.select("#stop-colour-pointers").remove();const gPointers=legendSvg.append("g").attr("transform","translate(0,30)").attr("id","stop-colour-pointers"),pointerData=[];stopColours.each(function(d,i){const x=Math.floor(d.offset*400)+10;pointerData.push({x:x,stopIndex:i})});pointerData[pointerData.length-1].x=410;for(let i=0;i<pointerData.length;i++){const previousPointerData=i>0?pointerData[i-1]:null,nextPointerData=i<pointerData.length-1?pointerData[i+1]:null;pointerData[i].previousPointerData=previousPointerData;pointerData[i].nextPointerData=nextPointerData}gPointers.selectAll("polygon").data(pointerData).enter().append("polygon").attr("points",function(){return`0,15 -7,0 7,0`}).attr("transform",function(d){return`translate(${d.x}, 0)`}).call(d3.drag().on("drag",stopColourPolygonDragged).on("end",stopColourPolygonDragEnded))},updateGradientLegendAxis=function(attributeSelectId){const legendSvg=d3.select(`#attribute-node-colouring-preview svg`),attribute=document.getElementById(attributeSelectId).value,attributeValues=currentGraph.getAllAttributeValues(attribute),xMin=d3.min(attributeValues),xMax=d3.max(attributeValues),axis=createLinearAxis(xMin,xMax,10,410),axisLeg=d3.axisBottom(axis);legendSvg.select("#gradient-legend-axis").remove();legendSvg.append("g").attr("transform","translate(0, 60)").attr("id","gradient-legend-axis").call(axisLeg)},addGradientListColour=function(legendDivId,value,idPrefix,colourListId){const colourList=d3.select(`#${colourListId}`),inputColour=addListColour(value,idPrefix,colourList);inputColour.on("change",function(){updateGradientColour(legendDivId,colourListId)});updateGradientLegend(legendDivId,colourListId)},addListColour=function(value,idPrefix,colourList){const valueWithoutWhitespaces=removeSpacesAndCommas(value),id=`${idPrefix}-colour-${valueWithoutWhitespaces}`,newDistinctColourRow=colourList.append("li").append("div").classed("colour-row-list",!0);return newDistinctColourRow.append("label").attr("title",value).attr("for",id).html(value),newDistinctColourRow.append("input").attr("type","color").attr("id",id).property("value",groupColours(value))},randomColour=function(brightness){function randomChannel(brightness){var r=255-brightness,n=0|Math.random()*r+brightness,s=n.toString(16);return s.length==1?"0"+s:s}return"#"+randomChannel(brightness)+randomChannel(brightness)+randomChannel(brightness)},randomizeListColours=function(colourListId){d3.selectAll(`#${colourListId} input`).prop(value,randomColour(0))},changeAttributeCategoryColouringList=function(attributeSelectId,colourListId){const attributeName=document.getElementById(attributeSelectId).value;if(attributeName!==""){const colourList=d3.select(`#${colourListId}`),attributeDistinctValues=currentGraph.getDistinctValues(attributeName);colourList.html("");for(const value of attributeDistinctValues)addListColour(value,"category",colourList)}},changeAttributeCategoryColouringFromSettings=function(attributeSelectId,colourListId){const attributeName=document.getElementById(attributeSelectId).value,colourList=document.getElementById(colourListId),colourObject={};for(const colourLI of colourList.children){const distinctValue=colourLI.querySelector("label").innerHTML,colour=colourLI.querySelector("input").value;colourObject[distinctValue]=colour}nodeVisualProperties.colouring.lastColouringType="categorical";setAttributeCategoryColouring(attributeName,colourObject)},saveAttributeCategoryColouring=function(){},setAttributeCategoryColouring=function(attributeName,colourObject){node.style("fill",function(d){const attributeValue=getNodeAttribute(d,attributeName);if(attributeValue==="")return nodeVisualProperties.colouring.network;const resultColour=hexToRgb(colourObject[attributeValue]),lightness=fontLightness(resultColour),node_text=$("#"+d.id+"_node_text");return node_text.css("fill","hsl(0, 0%, "+String(lightness)+"%)"),rgbObjectToString(resultColour)});link.style("stroke",function(l){const{id}=l.source,attributeValue=currentGraph.getNodeDataValue(id,attributeName);if(!isNullOrEmpty(attributeValue))return isNullOrEmpty(attributeValue)?nodeVisualProperties.colouring.network:colourObject[attributeValue]})},setPartitionColouring=function(colourListId){const colourObject=contructColourObjectFromList(colourListId);nodeVisualProperties.colouring.lastColouringType="partition";node.style("fill",function(d){const{id}=d,partition=currentGraph.getPartition(id);if(partition==="")return nodeVisualProperties.colouring.network;const resultColour=hexToRgb(colourObject[partition]),lightness=fontLightness(resultColour),node_text=$("#"+id+"_node_text");return node_text.css("fill","hsl(0, 0%, "+String(lightness)+"%)"),rgbObjectToString(resultColour)});link.style("stroke",function(l){const{id}=l.source,partition=currentGraph.getPartition(id);return partition===""?nodeVisualProperties.colouring.network:colourObject[partition]});const boxplots=d3.selectAll("#partition-metric-boxplot-graph-container svg");updateBoxplotColour(boxplots,colourObject)},contructColourObjectFromList=function(colourListId){const colourList=document.getElementById(`${colourListId}`),colourObject={};for(const colourLI of colourList.children){const distinctPartition=colourLI.querySelector("label").innerHTML,colour=colourLI.querySelector("input").value;colourObject[distinctPartition]=colour}return colourObject},changeClassColouringFromSettings=function(attributeSelectId,colourListId,colourNodes=false){const attributeName=document.getElementById(attributeSelectId).value,colourList=document.getElementById(colourListId),colourObject={};for(const colourLI of colourList.children){const distinctValue=colourLI.querySelector("label").innerHTML,colour=colourLI.querySelector("input").value;colourObject[distinctValue]=colour}setClassColouring(attributeName,colourObject,colourNodes)},setClassColouring=function(attributeName,colourObject,colourNodes){const rects=d3.selectAll("#partition-metric-mcc-graph-container rect");rects.style("fill",d=>colourObject[d.className]);colourNodes&&(node.style("fill",function(d){const{id}=d,partition=currentGraph.getNodeDataValue(id,attributeName);if(partition==="")return nodeVisualProperties.colouring.network;const resultColour=hexToRgb(colourObject[partition]);return rgbObjectToString(resultColour)}),link.style("stroke",function(l){const{id}=l.source,partition=currentGraph.getNodeDataValue(id,attributeName);return partition===""?nodeVisualProperties.colouring.network:colourObject[partition]}))},setDefaultNodeColour=function(nodes,colour){nodes.style("fill",function(d){const{}=d;return colour})},setDefaultLinkColour=function(links,colour){links.style("stroke",colour)},setDefaultNodeAndLinkColour=function(nodes,links){const defaultNodeColour=document.getElementById("network-colour-input").value;setDefaultNodeColour(nodes,defaultNodeColour);setDefaultLinkColour(links,defaultNodeColour)},changeNetworkNodeColour=function(colourInputId){const colour=$(`#${colourInputId}`).val();nodeVisualProperties.colouring.network=colour;setDefaultNodeAndLinkColour(node,link)},changeNetworkBackgroundColour=function(colourInputId){const colour=$(`#${colourInputId}`).val();nodeVisualProperties.colouring.background=colour;$("#network-background-rect.background").css("fill",colour)},projectAttributeXAxis=function(selectElement){const attributeName=selectElement.value;if(attributeName!==""){const optgroup=selectElement.options[selectElement.selectedIndex].closest("optgroup").getAttribute("label");let attributeMax=null,attributeMin=null;optgroup==="Attributes"?(attributeMax=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("max")),attributeMin=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("min")),currentGraph.updateXForceAttribute(attributeName,attributeMax,attributeMin)):optgroup==="Centralities"&&(attributeMax=graph.properties[attributeName].max,attributeMin=graph.properties[attributeName].min,currentGraph.updateXForceProperty(attributeName));startSimulation();return}currentGraph.setDefaultXForce();startSimulation()},projectAttributeYAxis=function(selectElement){const attributeName=selectElement.value;if(attributeName!==""){const optgroup=selectElement.options[selectElement.selectedIndex].closest("optgroup").getAttribute("label");let attributeMax=null,attributeMin=null;optgroup==="Attributes"?(attributeMax=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("max")),attributeMin=parseFloat($("#"+attributeName+"-sliderOutputMin").attr("min")),currentGraph.updateYForceAttribute(attributeName,attributeMax,attributeMin)):optgroup==="Centralities"&&(attributeMax=graph.properties[attributeName].max,attributeMin=graph.properties[attributeName].min,currentGraph.updateYForceProperty(attributeName));startSimulation();return}currentGraph.setDefaultYForce();startSimulation()},createDoubleSlider=function(sliderId,attributeName,minValueId,maxValueId,minValue,maxValue,lowValue=minValue,highValue=maxValue){$("#"+sliderId).slider({range:!0,min:minValue,max:maxValue,values:[lowValue,highValue],step:.01,stop:function(event,ui){const minValueElem=document.getElementById(minValueId),maxValueElem=document.getElementById(maxValueId);minValueElem.value=ui.values[0];maxValueElem.value=ui.values[1];ui.handleIndex===0?filterByValue(minValueElem,attributeName,lower,!1):ui.handleIndex===1&&filterByValue(maxValueElem,attributeName,greater,!0)}})},shortestPathsBFS=function(graph){const paths={},visited={},{nodes,nodes:{length},linkedByIndex}=graph;for(const node1 of nodes){const node1Id=node1.id;paths[node1Id]={};visited[node1Id]={};for(const node2 of graph.nodes){const node2Id=node2.id;paths[node1Id][node2Id]=Infinity;visited[node1Id][node2Id]=!1}}for(const[,node]of nodes.entries()){const src=node.id;paths[src][src]=0;visited[src][src]=!0;const q=new Queue;for(q.enqueue(src);!q.isEmpty;){const u=q.dequeue();for(let j=0;j<length;j++){const v=nodes[j].id;visited[src][v]===!1&&(linkedByIndex[u+","+v]||linkedByIndex[v+","+u])&&(visited[src][v]=!0,paths[src][v]=paths[v][src]=paths[src][u]+1,q.enqueue(v))}}}return paths},openTab=function(event,contentId,divId,contentClass){const tabcontents=document.getElementById(divId).querySelectorAll(contentClass);for(const tabcontent of tabcontents)tabcontent.style.display="none";const tablinks=document.getElementById(divId).querySelectorAll(".tab-link");for(const tablink of tablinks)tablink.className=tablink.className.replace(" tab-active","");document.getElementById(contentId).style.display="block";event.currentTarget.className+=" tab-active"},getJsonValue=function(obj,stringPath){return stringPath.split(".").reduce(function(o,k){return o&&o[k]},obj)},cancelDefaultBehaviour=function(e){return e.preventDefault(),e.stopPropagation(),!1},removeSpacesAndCommas=function(inputString){return inputString.replace(/[\s,]+/g,"-")},clearElement=function(id){document.getElementById(id).innerHTML=""};window.addEventListener("load",function(){$(".collapse.in").prev(".panel-heading").addClass("active");$("#accordion").on("show.bs.collapse",function(a){$(a.target).prev(".panel-heading").addClass("active")}).on("hide.bs.collapse",function(a){$(a.target).prev(".panel-heading").removeClass("active")});document.addEventListener("click",closeAllToolbarPanels);prepareInputForm();calculateAllMetrics();prepareNodeDatalist();selectionNode.each(function(d){setGroupColour(d)});const{num:numAttributes=[]}=currentGraph.attributes;for(const attribute of numAttributes){const containerDivId=`${attribute}-histogram-container`;hist(containerDivId,currentGraph,attribute,300,250)}updateGradientLegend("attribute-node-colouring-preview","numerical-colour-list");updateGradientLegendAxis("attribute-node-colouring");changeAttributeCategoryColouringList("categorical-attribute-node-colouring","categorical-colour-list");updateRemodelOptionsHeader("remodel-attribute-panel-header","remodel-network-select");displayAlgorithmParameters("remodel-algorithm-select","-parameters-remodel");displayMetricParameters("remodel-metric-select")}),function(global,factory){typeof exports=="object"&&typeof module!="undefined"?factory(exports,require("d3-dispatch"),require("d3-drag"),require("d3-interpolate"),require("d3-selection"),require("d3-transition")):typeof define=="function"&&define.amd?define(["exports","d3-dispatch","d3-drag","d3-interpolate","d3-selection","d3-transition"],factory):factory(global.d3=global.d3||{},global.d3,global.d3,global.d3,global.d3,global.d3)}(this,function(exports,d3Dispatch,d3Drag,d3Interpolate,d3Selection,d3Transition){"use strict";function nopropagation(){d3Selection.event.stopImmediatePropagation()}function type(t){return{type:t}}function defaultFilter(){return!d3Selection.event.button}function defaultExtent(){var svg=this.ownerSVGElement||this;return[[0,0],[svg.width.baseVal.value,svg.height.baseVal.value]]}function local(node){while(!node.__brush)if(!(node=node.parentNode))return;return node.__brush}function empty(extent){return extent[0][0]===extent[1][0]||extent[0][1]===extent[1][1]}function brushSelection(node){var state=node.__brush;return state?state.dim.output(state.selection):null}function brushX(){return brush$1(X)}function brushY(){return brush$1(Y)}function brush$1(dim){function brush(group){var overlay=group.property("__brush",initialize).selectAll(".overlay").data([type("overlay")]),handle;overlay.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",cursors.overlay).merge(overlay).each(function(){var extent=local(this).extent;d3Selection.select(this).attr("x",extent[0][0]).attr("y",extent[0][1]).attr("width",extent[1][0]-extent[0][0]).attr("height",extent[1][1]-extent[0][1])});group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class","selection").attr("cursor",cursors.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");handle=group.selectAll(".handle").data(dim.handles,function(d){return d.type});handle.exit().remove();handle.enter().append("rect").attr("class",function(d){return"handle handle--"+d.type}).attr("cursor",function(d){return cursors[d.type]});group.each(redraw).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",started)}function redraw(){var group=d3Selection.select(this),selection=local(this).selection;selection?(group.selectAll(".selection").style("display",null).attr("x",selection[0][0]).attr("y",selection[0][1]).attr("width",selection[1][0]-selection[0][0]).attr("height",selection[1][1]-selection[0][1]),group.selectAll(".handle").style("display",null).attr("x",function(d){return d.type[d.type.length-1]==="e"?selection[1][0]-handleSize/2:selection[0][0]-handleSize/2}).attr("y",function(d){return d.type[0]==="s"?selection[1][1]-handleSize/2:selection[0][1]-handleSize/2}).attr("width",function(d){return d.type==="n"||d.type==="s"?selection[1][0]-selection[0][0]+handleSize:handleSize}).attr("height",function(d){return d.type==="e"||d.type==="w"?selection[1][1]-selection[0][1]+handleSize:handleSize})):group.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function emitter(that,args){return that.__brush.emitter||new Emitter(that,args)}function Emitter(that,args){this.that=that;this.args=args;this.state=that.__brush;this.active=0}function started(){function moved(){var point1=d3Selection.mouse(that);point=point1;moving=!0;noevent();move()}function move(){var t;dx=point[0]-point0[0];dy=point[1]-point0[1];switch(mode){case MODE_SPACE:case MODE_DRAG:signX&&(dx=Math.max(W-w0,Math.min(E-e0,dx)),w1=w0+dx,e1=e0+dx);signY&&(dy=Math.max(N-n0,Math.min(S-s0,dy)),n1=n0+dy,s1=s0+dy);break;case MODE_HANDLE:signX<0?(dx=Math.max(W-w0,Math.min(E-w0,dx)),w1=w0+dx,e1=e0):signX>0&&(dx=Math.max(W-e0,Math.min(E-e0,dx)),w1=w0,e1=e0+dx);signY<0?(dy=Math.max(N-n0,Math.min(S-n0,dy)),n1=n0+dy,s1=s0):signY>0&&(dy=Math.max(N-s0,Math.min(S-s0,dy)),n1=n0,s1=s0+dy);break;case MODE_CENTER:signX&&(w1=Math.max(W,Math.min(E,w0-dx*signX)),e1=Math.max(W,Math.min(E,e0+dx*signX)));signY&&(n1=Math.max(N,Math.min(S,n0-dy*signY)),s1=Math.max(N,Math.min(S,s0+dy*signY)))}e1<w1&&(signX*=-1,t=w0,w0=e0,e0=t,t=w1,w1=e1,e1=t,type in flipX&&overlay.attr("cursor",cursors[type=flipX[type]]));s1<n1&&(signY*=-1,t=n0,n0=s0,s0=t,t=n1,n1=s1,s1=t,type in flipY&&overlay.attr("cursor",cursors[type=flipY[type]]));state.selection&&(selection=state.selection);lockX&&(w1=selection[0][0],e1=selection[1][0]);lockY&&(n1=selection[0][1],s1=selection[1][1]);(selection[0][0]!==w1||selection[0][1]!==n1||selection[1][0]!==e1||selection[1][1]!==s1)&&(state.selection=[[w1,n1],[e1,s1]],redraw.call(that),emit.brush())}function ended(){if(nopropagation(),d3Selection.event.touches){if(d3Selection.event.touches.length)return;touchending&&clearTimeout(touchending);touchending=setTimeout(function(){touchending=null},500);group.on("touchmove.brush touchend.brush touchcancel.brush",null)}else{d3Drag.dragEnable(d3Selection.event.view,moving);view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null)}group.attr("pointer-events","all");overlay.attr("cursor",cursors.overlay);state.selection&&(selection=state.selection);empty(selection)&&(state.selection=null,redraw.call(that));emit.end()}function keydowned(){switch(d3Selection.event.keyCode){case 18:mode===MODE_HANDLE&&(signX&&(e0=e1-dx*signX,w0=w1+dx*signX),signY&&(s0=s1-dy*signY,n0=n1+dy*signY),mode=MODE_CENTER,move());break;case 32:(mode===MODE_HANDLE||mode===MODE_CENTER)&&(signX<0?e0=e1-dx:signX>0&&(w0=w1-dx),signY<0?s0=s1-dy:signY>0&&(n0=n1-dy),mode=MODE_SPACE,overlay.attr("cursor",cursors.selection),move());break;default:return}noevent()}function keyupped(){switch(d3Selection.event.keyCode){case 18:mode===MODE_CENTER&&(signX<0?e0=e1:signX>0&&(w0=w1),signY<0?s0=s1:signY>0&&(n0=n1),mode=MODE_HANDLE,move());break;case 32:mode===MODE_SPACE&&(d3Selection.event.altKey?(signX&&(e0=e1-dx*signX,w0=w1+dx*signX),signY&&(s0=s1-dy*signY,n0=n1+dy*signY),mode=MODE_CENTER):(signX<0?e0=e1:signX>0&&(w0=w1),signY<0?s0=s1:signY>0&&(n0=n1),mode=MODE_HANDLE),overlay.attr("cursor",cursors[type]),move());break;default:return}noevent()}var group,overlay,view;if(d3Selection.event.touches){if(d3Selection.event.changedTouches.length<d3Selection.event.touches.length)return noevent()}else if(touchending)return;if(filter.apply(this,arguments)){var that=this,type=d3Selection.event.target.__data__.type,mode=(d3Selection.event.metaKey?type="overlay":type)==="selection"?MODE_DRAG:d3Selection.event.altKey?MODE_CENTER:MODE_HANDLE,signX=dim===Y?null:signsX[type],signY=dim===X?null:signsY[type],state=local(that),extent=state.extent,selection=state.selection,W=extent[0][0],w0,w1,N=extent[0][1],n0,n1,E=extent[1][0],e0,e1,S=extent[1][1],s0,s1,dx,dy,moving,lockX,lockY,point0=d3Selection.mouse(that),point=point0,emit=emitter(that,arguments).beforestart();if(type==="overlay"?state.selection=selection=[[w0=dim===Y?W:point0[0],n0=dim===X?N:point0[1]],[e0=dim===Y?E:w0,s0=dim===X?S:n0]]:(w0=selection[0][0],n0=selection[0][1],e0=selection[1][0],s0=selection[1][1]),w1=w0,n1=n0,e1=e0,s1=s0,group=d3Selection.select(that).attr("pointer-events","none"),overlay=group.selectAll(".overlay").attr("cursor",cursors[type]),d3Selection.event.touches)group.on("touchmove.brush",moved,!0).on("touchend.brush touchcancel.brush",ended,!0);else view=d3Selection.select(d3Selection.event.view).on("keydown.brush",keydowned,!0).on("keyup.brush",keyupped,!0).on("mousemove.brush",moved,!0).on("mouseup.brush",ended,!0),d3Drag.dragDisable(d3Selection.event.view);nopropagation();d3Transition.interrupt(that);redraw.call(that);emit.start()}}function initialize(){var state=this.__brush||{selection:null};return state.extent=extent.apply(this,arguments),state.dim=dim,state}var extent=defaultExtent,filter=defaultFilter,listeners=d3Dispatch.dispatch(brush,"start","brush","end"),handleSize=6,touchending;return brush.move=function(group,selection){group.selection?group.on("start.brush",function(){emitter(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){emitter(this,arguments).end()}).tween("brush",function(){function tween(t){state.selection=t===1&&empty(selection1)?null:i(t);redraw.call(that);emit.brush()}var that=this,state=that.__brush,emit=emitter(that,arguments),selection0=state.selection,selection1=dim.input(typeof selection=="function"?selection.apply(this,arguments):selection,state.extent),i=d3Interpolate.interpolate(selection0,selection1);return selection0&&selection1?tween:tween(1)}):group.each(function(){var that=this,args=arguments,state=that.__brush,selection1=dim.input(typeof selection=="function"?selection.apply(that,args):selection,state.extent),emit=emitter(that,args).beforestart();d3Transition.interrupt(that);state.selection=selection1==null||empty(selection1)?null:selection1;redraw.call(that);emit.start().brush().end()})},Emitter.prototype={beforestart:function(){return++this.active==1&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return--this.active==0&&(delete this.state.emitter,this.emit("end")),this},emit:function(type){d3Selection.customEvent(new BrushEvent(brush,type,dim.output(this.state.selection)),listeners.apply,listeners,[type,this.that,this.args])}},brush.extent=function(_){return arguments.length?(extent=typeof _=="function"?_:constant([[+_[0][0],+_[0][1]],[+_[1][0],+_[1][1]]]),brush):extent},brush.filter=function(_){return arguments.length?(filter=typeof _=="function"?_:constant(!!_),brush):filter},brush.handleSize=function(_){return arguments.length?(handleSize=+_,brush):handleSize},brush.on=function(){var value=listeners.on.apply(listeners,arguments);return value===listeners?brush:value},brush}var constant=function(x){return function(){return x}},BrushEvent=function(target,type,selection){this.target=target;this.type=type;this.selection=selection},noevent=function(){d3Selection.event.preventDefault();d3Selection.event.stopImmediatePropagation()},MODE_DRAG={name:"drag"},MODE_SPACE={name:"space"},MODE_HANDLE={name:"handle"},MODE_CENTER={name:"center"},X={name:"x",handles:["e","w"].map(type),input:function(x,e){return x&&[[x[0],e[0][1]],[x[1],e[1][1]]]},output:function(xy){return xy&&[xy[0][0],xy[1][0]]}},Y={name:"y",handles:["n","s"].map(type),input:function(y,e){return y&&[[e[0][0],y[0]],[e[1][0],y[1]]]},output:function(xy){return xy&&[xy[0][1],xy[1][1]]}},XY={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(type),input:function(xy){return xy},output:function(xy){return xy}},cursors={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},flipX={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},flipY={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},signsX={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},signsY={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1},brush=function(){return brush$1(XY)};exports.brush=brush;exports.brushX=brushX;exports.brushY=brushY;exports.brushSelection=brushSelection;Object.defineProperty(exports,"__esModule",{value:!0})});const serializeNumericFilters=function(filterDiv){const numericFilters=filterDiv.getElementsByClassName("numeric"),resultFilters=[];for(const numericFilter of numericFilters){const attributeName=numericFilter.querySelector("h4").innerHTML,minInput=numericFilter.querySelector("#"+attributeName+"-sliderOutputMin"),maxInput=numericFilter.querySelector("#"+attributeName+"-sliderOutputMax"),filterJson={attribute:attributeName,min:parseFloat(minInput.min),max:parseFloat(maxInput.max),lowValue:parseFloat(minInput.value),highValue:parseFloat(maxInput.value)};resultFilters.push(filterJson)}return parseFloat(),resultFilters},serializeCategoricalFilters=function(filterDiv){const categoricalFilters=filterDiv.getElementsByClassName("categorical"),resultFilters=[];for(const categoricalFilter of categoricalFilters){const attributeName=categoricalFilter.querySelector("h4").innerHTML,checkboxes=categoricalFilter.querySelectorAll("input"),filterJson={attribute:attributeName,categories:{}};for(const checkbox of checkboxes){const category=checkbox.value,checked=checkbox.checked;filterJson.categories[category]=checked}resultFilters.push(filterJson)}return resultFilters},serializeFilters=function(){const filterDiv=document.getElementById("attributes");return{numeric:serializeNumericFilters(filterDiv),categorical:serializeCategoricalFilters(filterDiv)}},serializeGraph=function(graph){const serializedGraph=structuredClone(graph),{links}=serializedGraph;for(const link of links)link.source=link.source.id,link.target=link.target.id;return serializeGraph},getColourListInputSelector=function(colourListId){return`#${colourListId} input[type=color]`},serializeGradientColouring=function(){const chosenNumAttributeForColouring=document.getElementById("attribute-node-colouring").value,gPointers=d3.selectAll("#stop-colour-pointers polygon"),gradientPointerData=[];gPointers.each(function(d){gradientPointerData.push(d.x)});const gradientAxisColours=[],gradientAxisColourInputs=document.querySelectorAll(getColourListInputSelector("numerical-colour-list"));for(const colourInput of gradientAxisColourInputs)gradientAxisColours.push(colourInput.value);return{attribute:chosenNumAttributeForColouring,pointers:{data:gradientPointerData},colours:gradientAxisColours}},serializeColourList=function(colourListId){const colourList=document.getElementById(colourListId),colorListItems=colourList.getElementsByTagName("li"),colours=[];for(const colourListItem of colorListItems){const colourObject={value:colourListItem.querySelector("label").textContent,colour:colourListItem.querySelector("input").value};colours.push(colourObject)}return colours},serializeCategoryColouring=function(){const chosenNumAttributeForColouring=document.getElementById("categorical-attribute-node-colouring").value,categoricalColours=serializeColourList("categorical-colour-list");return{attribute:chosenNumAttributeForColouring,colours:categoricalColours}},serializePartitionColouring=function(){const partitionColours=serializeColourList("partition-colour-list");return{colours:partitionColours}},serializeClassColouring=function(){const partitionColours=serializeColourList("class-colour-list");return{colours:partitionColours}},serializeVisuals=function(){const monoColour=document.getElementById("network-colour-input").value,gradientColourObject=serializeGradientColouring(),categoricalColourObject=serializeCategoryColouring(),partitionColourObject=serializePartitionColouring(),classColourObject=serializeClassColouring();return{monoColour:monoColour,gradient:gradientColourObject,categorical:categoricalColourObject,partition:partitionColourObject,"class":classColourObject}},serializeNetworkAndSettings=function(){const serializedCurrentGraph=currentGraph.serialize(),serializedSelectionGraph=serializeGraph(selectionGraph),filters=serializeFilters(),visuals=serializeVisuals(),currentGraphObject={graph:serializedCurrentGraph,selectionGraph:serializedSelectionGraph,filters:filters,filterNodeList:filterNodeList,visuals:visuals};return{currentGraph:currentGraphObject}},saveGraph=function(fileName){var a=document.createElement("a"),file;const stateJson=serializeNetworkAndSettings();file=new Blob([JSON.stringify(stateJson,null,2)],{type:"application/json"});a.href=URL.createObjectURL(file);a.download=fileName;a.click()},loadNetwork=async function(){return},prepareNodeDatalist=function(){const nodeInput=document.getElementById("node-list-input"),nodeDataList=document.getElementById("node-list");nodeInput.addEventListener("focus",showNodeDataList);nodeInput.addEventListener("keyup",filterNodeSearchList);nodeInput.addEventListener("blur",function(){nodeDataList.classList.remove("active-block")});nodeInput.addEventListener("mousedown",function(){document.activeElement===nodeInput&&nodeInput.blur()})},showNodeDataList=function(){const nodeDataList=document.getElementById("node-list");nodeDataList.classList.add("active-block")},filterNodeSearchList=function(){const nodeInput=document.getElementById("node-list-input"),filterValue=nodeInput.value.toLowerCase(),nodeList=document.getElementById("node-list"),nodeListItems=nodeList.getElementsByTagName("*");for(const nodeListItem of nodeListItems){const nodeId=nodeListItem.textContent;if(nodeId.startsWith(filterValue)){nodeListItem.style.display="";continue}nodeListItem.style.display="none"}},nodeHeadingClick=function(nodeId,nodeIndex){selectNode(nodeId);toggleNodeDetails(nodeId,nodeIndex);showNodeNeighbors(nodeId)},nodeHeadingMouseOver=function(nodeId,opacity){fadeDisconnectedNodes(nodeId,opacity)},selectNode=function(nodeId){deselectAllNodes();nodeGroups.classed("selected",function(d){return d.selected=d.selected|d.id==nodeId})},toggleNodeDetails=function(nodeId,nodeIndex){const nodeInput=document.getElementById("node-list-input");nodeInput.value=nodeId;const detailsElement=document.getElementById("node-detail-container"),attributesDiv=document.getElementById("node-attributes"),centralitiesDiv=document.getElementById("node-centralities");detailsElement.setAttribute("data-id",nodeId);(detailsElement.style.display==="none"||detailsElement.style.display==="")&&(detailsElement.style.display="block");let inputs=attributesDiv.getElementsByTagName("input");for(const input of inputs){const attributeName=input.getAttribute("data-attribute"),attributeValue=currentGraph.getNodeDataValue(nodeId,attributeName);input.value=attributeValue;input.setAttribute("title",attributeValue)}showNodeValueInHistogram(nodeId,nodeIndex,attributesDiv);inputs=centralitiesDiv.getElementsByTagName("input");for(const input of inputs){const attributeName=input.getAttribute("data-attribute"),attributeValue=currentGraph.getPropertyValue(nodeId,attributeName);input.value=attributeValue!==undefined?attributeValue:"Calculating"}},showNodeValueInHistogram=function(nodeId,nodeIndex,attributeDiv){const histogramSvgs=attributeDiv.getElementsByTagName("svg");for(const histogram of histogramSvgs){const attributeName=histogram.getAttribute("data-attribute"),attributeValue=currentGraph.getNodeDataValue(nodeId,attributeName),bins=histogram.getElementsByTagName("rect");d3.selectAll(bins).style("fill",function(d){return d.x0<=attributeValue&&d.x1>=attributeValue?"red":"#ffeead"})}},showNodeNeighbors=function(nodeId){const neighborsContainer=document.getElementById("node-neighbors-section"),neighborsHeadlineElement=neighborsContainer.firstElementChild;neighborsHeadlineElement.innerHTML=`Node "${nodeId}" neighbors`;createNeighborHeadings(nodeId)},createNeighborHeadings=function(nodeId){const neighborsGridElement=d3.select("#neighbors-nav");neighborsGridElement.html("");const headingData=[];for(const link of currentGraph.links){let neighbor=null;if(link.source.id===nodeId&&(neighbor=link.target),link.target.id===nodeId&&(neighbor=link.source),neighbor!=null){const{id:neighborId,index:neighborIndex}=neighbor;headingData.push({nodeId:neighborId,index:neighborIndex})}}neighborsGridElement.on("click",function(){const{nodeId,index}=d3.event.target.__data__;nodeHeadingClick(nodeId,index)}).selectAll("div").data(headingData).enter().append("div").classed("node-heading",!0).attr("role","tab").attr("id",d=>`neighbor-heading-${d.nodeId}`).append("h5").html(d=>d.nodeId)};class Queue{constructor(){this.data={};this.head=0;this.tail=0}enqueue(element){this.data[this.tail]=element;this.tail++}dequeue(){const element=this.data[this.head];return delete this.data[this.head],this.head++,element}peek(){return this.data[this.head]}get length(){return this.tail-this.head}get isEmpty(){return this.length===0}}const inputColorClick=function(selection_panel){selection_panel.querySelector("input").click()},stopClickPropagation=function(event){event.stopPropagation()},selectNodesBySelection=function(selectionId,graphRef){deselectAllNodes();nodeGroups.filter(function(n){return graphRef.getPartition(n.id)===selectionId}).classed("selected",function(d){return d.previouslySelected=d.selected,d.selected=!0})},changeGroupColour=function(input,selectionId,graphRef){const selectionPanel=input.parentNode,newBackgroundColour=input.value;selectionPanel.style.backgroundColor=newBackgroundColour;const selectionNodes=node.filter(function(n){return graphRef.getPartition(n.id)===selectionId});selectionNodes.style("fill",function(d){return link.filter(function(l){return l.source===d.id||l.source.id===d.id}).style("stroke",newBackgroundColour),newBackgroundColour})},setGroupColour=function(d){document.getElementById("selection_color_"+d.id).value=groupColours(d.id)},getGroupColour=function(d){return document.getElementById("selection_color_"+d.id).value},addNewSelection=function(newId=null){const{length,[length-1]:lastNode}=selectionGraph.nodes;newId===null&&(newId=length===0?0:lastNode.id+1);const newSelection={};newSelection.id=newId;newSelection.name="Selection "+newId;newSelection.nonodes=0;selectionGraph.nodes.push(newSelection);for(const node of selectionGraph.nodes){const newLink={};newLink.source=newId;newLink.target=node.id;newLink.value=0;const newLink2={};newLink2.source=node.id;newLink2.target=newId;newLink2.value=0;selectionGraph.links.push(newLink);newId!=node.id&&selectionGraph.links.push(newLink2)}addSelectionDiv(newSelection)},addSelectionDiv=function(selectionData){const mainDiv=d3.select("#list-selections"),{id:selectionId}=selectionData,panel=mainDiv.append("div").datum(selectionData).classed("selection-panel",!0).attr("id",`selection_panel_${selectionId}`).on("click",`selectNodesBySelection(${selectionId}, ${currentGraph})`);panel.append("h4").attr("class","panel-title").attr("contenteditable","true").attr("onclick","stopClickPropagation(event)").html(`Selection ${selectionId}`);const panel_list_add_btn=panel.append("button").attr("class","btn btn-danger btn-sm rounded-0").attr("type","button").attr("data-toggle","tooltip").attr("data-placement","top").attr("title","Add Selected Nodes To This Group").attr("onclick",`addNodesToSelection(event, ${selectionId})`);panel_list_add_btn.append("i").attr("class","fa fa-plus-square");const panel_list_delete_btn=panel.append("button").attr("class","btn btn-danger btn-sm rounded-0").attr("type","button").attr("data-toggle","tooltip").attr("data-placement","top").attr("title","Delete").attr("onclick",`deleteSelection(event, ${selectionId})`);panel_list_delete_btn.append("i").attr("class","fa fa-trash");const partitionColourList=d3.select("#partition-colour-list"),color=addListColour(selectionId,"partition",partitionColourList).property("value");panel.style("background-color",color)},addSelectionDivs=function(selectionGraph){const mainDiv=d3.select("#list-selections"),panels=mainDiv.selectAll("div").data(selectionGraph.nodes).enter().append("div").attr("class","selection-panel").attr("id",d=>`selection_panel_${d.id}`).on("click",function(d){selectNodesBySelection(d.id,currentGraph)});panels.append("h4").attr("class","panel-title").attr("contenteditable","true").on("click",()=>{stopClickPropagation(d3.event)}).html(d=>`Selection ${d.id}`);const panel_list_add_btn=panels.append("button").attr("class","btn btn-danger btn-sm rounded-0").attr("type","button").attr("data-toggle","tooltip").attr("data-placement","top").attr("title","Add Selected Nodes To This Group").on("click",function(e,d){addNodesToSelection(e,d.id)});panel_list_add_btn.append("i").attr("class","fa fa-plus-square");const panel_list_delete_btn=panels.append("button").attr("class","btn btn-danger btn-sm rounded-0").attr("type","button").attr("data-toggle","tooltip").attr("data-placement","top").attr("title","Delete").on("click",function(e,d){deleteSelection(e,d.id)});panel_list_delete_btn.append("i").attr("class","fa fa-trash");const partitionColourList=d3.select("#partition-colour-list").html("");panels.style("background-color",function(d){return addListColour(d.id,"partition",partitionColourList).property("value")})},createPartitionMccGraphs=function(){const classAttribute=document.getElementById("partition-metric-mcc-attribute-select").value,mccObject=matthewsCorrelationCoeficient(classAttribute),clusterMetricContainer=d3.select("#partition-metric-mcc-graph-container").html(""),clusterDivs=d3.selectAll("#list-selections div");if(clusterDivs.size()>0){clusterDivs.each(function(d){clusterMetricDiv=clusterMetricContainer.append("div");addMccPlot(clusterMetricDiv,d.id,mccObject)});const distinctClasses=currentGraph.getDistinctValues(classAttribute),classColourList=d3.select("#class-colour-list").html("");for(const realClass of distinctClasses)addListColour(realClass,"class",classColourList);changeClassColouringFromSettings("partition-metric-mcc-attribute-select","class-colour-list",!1)}},addMccTable=function(clusterMetricDiv,selectionId,mccObject){const mccTableDiv=clusterMetricDiv.append("div").attr("class","col-2-table");for(const mccPair of mccObject[selectionId]){const{className,value}=mccPair;mccTableDiv.append("span").text(className+": "+value.toFixed(2)).style("border","0.1rem solid white")}},addMccPlot=function(clusterMetricDiv,selectionId,mccObject){const barplotID=`barplot-mcc-${selectionId}`;clusterMetricDiv.append("div").attr("id",barplotID).style("position","relative");barplot(barplotID,mccObject[selectionId],-1,1,300,250,selectionId)},hexToRgb=function(hex){hex=hex.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(m,r,g,b){return r+r+g+g+b+b});const result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null},fontLightness=function(newColour){let rgbRepresentation=newColour;typeof newColour!="object"&&(rgbRepresentation=hexToRgb(newColour));const{r,g,b}=rgbRepresentation,lumaRed=r*.2126,lumaGreen=g*.7152,lumaBlue=b*.0722,lumaSum=lumaRed+lumaGreen+lumaBlue,perceivedLightness=lumaSum/255;return(perceivedLightness-.5)*-1e7},addNodesToSelection=function(event,selectionId){stopClickPropagation(event);const newColour=document.getElementById("selection_color_"+selectionId).value,lightness=fontLightness(newColour);node.filter(function(d){return d.selected}).each(function(d){let previousGroup=null;const{id:nodeId}=d,{[nodeId]:partition}=graph.partitions;if(partition!=""){previousGroup=partition;link.filter(function(l){return l.source.id==nodeId||l.target.id==nodeId}).each(function(l){const{source:{id:sourceId},target:{id:targetId},value}=l,{[sourceId]:node1Partition,[targetId]:node2Partition}=graph.partitions;if(node1Partition!=""&&node2Partition!="")if(sourceId==nodeId&&node2Partition!=""){const newSelectionLink=selectionGraph.links.find(x=>x.source.id==selectionId&&x.target.id==node2Partition),previousSelectionLink=selectionGraph.links.find(x=>x.source.id==previousGroup&&x.target.id==node2Partition);previousSelectionLink.value=previousSelectionLink.value-value;newSelectionLink.value=previousSelectionLink.value+value}else if(targetId==nodeId&&node1Partition!=""){const previousSelectionLink=selectionGraph.links.find(x=>x.source.id==node1Partition&&x.target.id==previousGroup),newSelectionLink=selectionGraph.links.find(x=>x.source.id==node1Partition&&x.target.id==selectionId);previousSelectionLink.value=previousSelectionLink.value-value;newSelectionLink.value=previousSelectionLink.value+value}});const previousSelectionNode=selectionGraph.nodes.find(x=>x.id==previousGroup);previousSelectionNode.nonodes=previousSelectionNode.nonodes-1}else link.filter(function(l){return l.source.id==nodeId||l.target.id==nodeId}).each(function(l){var newSelectionLink;const{source:{id:sourceId},target:{id:targetId},value}=l,{[sourceId]:node1Partition,[targetId]:node2Partition}=graph.partitions;sourceId==nodeId&&node2Partition!=""?(newSelectionLink=selectionGraph.links.find(sl=>sl.source.id==selectionId&&sl.target.id==node2Partition),newSelectionLink.value=newSelectionLink.value+value):targetId==nodeId&&node1Partition!=""&&(newSelectionLink=selectionGraph.links.find(sl=>sl.source.id==node1Partition&&sl.target.id==selectionId),newSelectionLink.value=newSelectionLink.value+value)});const newSelectionNode=selectionGraph.nodes.find(x=>x.id==selectionId);newSelectionNode.nonodes=newSelectionNode.nonodes+1;graph.partitions[d.id]=selectionId}).style("fill",function(d){const heading=document.getElementById("heading-"+d.id);return heading.style.backgroundColor=newColour,heading.style.color="hsl(0, 0%, "+String(lightness)+"%)",newColour});selectionNode.select("title").text(function(d){return"Number of Nodes: "+d.nonodes});selectionLink.select("title").text(function(d){return d.value})},deleteAllSelections=function(){currentGraph.clearPartitions();selectionGraph.nodes=[];selectionGraph.links=[];updateSelectionNodesAndLinks();document.getElementById("list-selections").innerHTML="";document.getElementById("partition-colour-list").innerHTML="";setDefaultNodeAndLinkColour(node,link)},deleteSelection=function(event,selectionId){event.stopPropagation();const selectionPanel=document.getElementById("selection_panel_"+selectionId);selectionPanel.parentNode.removeChild(selectionPanel);const lightness=fontLightness(forceProperties.colouring.network),nodesFromDeletedPartition=node.filter(function(d){return graph.partitions[d.id]==selectionId});forceProperties.attributeColouring.enabled?nodesFromDeletedPartition.each(function(d){return d3.select("#heading-"+d.id).style("background-color",forceProperties.colouring.network).style("color","hsl(0, 0%, "+String(lightness)+"%)"),graph.partitions[d.id]="",forceProperties.colouring.network}):nodesFromDeletedPartition.style("fill",function(d){return link.filter(function(l){return l.source.id===d.id}).style("stroke",forceProperties.colouring.network),d3.select("#heading-"+d.id).style("background-color",forceProperties.colouring.network).style("color","hsl(0, 0%, "+String(lightness)+"%)"),graph.partitions[d.id]="",forceProperties.colouring.network});selectionGraph.nodes=selectionGraph.nodes.filter(function(n){return n.id!=selectionId});selectionGraph.links=selectionGraph.links.filter(function(d){return d.source.id!=selectionId&&d.target.id!=selectionId});updateSelectionNodesAndLinks()},stringifyCommunityDetectionLinkReplacer=function(key,value){switch(key){case"source":case"target":return value.id;default:return value}},fillPartitionsWithAttribute=function(attributeName,currentGraphRef){for(const node in currentGraphRef.nodes)currentGraphRef.setPartition(node,currentGraphRef.getNodeDataValue(node,attributeName))},assignAttributePartitions=function(attributeSelect,currentGraphRef){deleteAllSelections();const attributeName=document.getElementById(attributeSelect).value;if(attributeName==="modularity"){requestCommunityDetection();return}const attributesDistinctValues=currentGraphRef.getDistinctValues(attributeName);fillPartitionsWithAttribute(attributeName,currentGraphRef);for(const value of attributesDistinctValues)addNewSelection(value);updateSelectionNodesAndLinks()},matthewsCorrelationCoeficient=function(classAttributeName){const distinctPartitions=currentGraph.getDistinctPartitions(),distinctClasses=currentGraph.getDistinctValues(classAttributeName);if(!distinctClasses||!distinctPartitions)return null;const confusionMatrices={};for(const partition of distinctPartitions){confusionMatrices[partition]={};const partitionObject=confusionMatrices[partition];for(const className of distinctClasses)partitionObject[className]={TP:0,FN:0,TN:0,FP:0}}for(const[node,nodePartition]of Object.entries(currentGraph.partitions)){const nodeRealClass=currentGraph.getNodeDataValue(node,classAttributeName);for(const partition in confusionMatrices){if(partition===nodePartition){for(const className in confusionMatrices[partition]){if(className===nodeRealClass){confusionMatrices[partition][className].TP+=1;continue}confusionMatrices[partition][className].FP+=1}continue}for(const className in confusionMatrices[partition]){if(className===nodeRealClass){confusionMatrices[partition][className].FN+=1;continue}confusionMatrices[partition][className].TN+=1}}}const mccObject={};for(const partition of distinctPartitions){mccObject[partition]=[];const partitionArray=mccObject[partition];for(const className of distinctClasses){const{TP,FP,FN,TN}=confusionMatrices[partition][className],mccNumerator=TN*TP-FN*FP,mccDenominator=Math.sqrt((TP+FP)*(TP+FN)*(TN+FP)*(TN+FN)),mcc=mccNumerator/mccDenominator;partitionArray.push({className:className,value:mcc})}}return mccObject},requestCommunityDetection=function(){const nodes_string=JSON.stringify(currentGraph.nodes,["id"]),links_string=JSON.stringify(currentGraph.links,stringifyCommunityDetectionLinkReplacer);$.ajax({url:"/Home/GraphCommunityDetection",type:"POST",data:{nodes:nodes_string,links:links_string},success:function(result){deleteAllSelections();currentGraph.partitions=JSON.parse(result.newPartitions);selectionGraph=JSON.parse(result.newSelections);addSelectionDivs(selectionGraph);updateSelectionNodesAndLinks();setPartitionColouring("partition-colour-list")},error:function(xhr,ajaxOptions,thrownError){alert(thrownError)}})},attributeTransform={},excludedAttributes=[],updateRemodelOptionsHeader=function(headerId,attributeSelectId){const header=document.getElementById(headerId),attributeSelect=document.getElementById(attributeSelectId);header.innerHTML=attributeSelect.value+" remodeling options"},displayAttributeTransformation=function(attribute,transformationListId){d3.select("#"+transformationListId).html("");const{[attribute]:transformations}=attributeTransform;if(transformations)for(const transformation of transformations){const transformationName=transformation.charAt(0).toUpperCase()+transformation.slice(1);addTransformationElement(transformationListId,transformation,transformationName)}},updateRemodelingAttributes=function(optionCheckbox,attributeSelectId){const attributeSelect=document.getElementById(attributeSelectId),attribute=optionCheckbox.value;if(!optionCheckbox.checked){excludedAttributes.push(attribute);return}for(let i=0;i<excludedAttributes.length;i++)if(excludedAttributes[i]===attribute){excludedAttributes.splice(i,1);return}},deleteAllTransformations=function(){attributeTransform={};document.getElementById("attribute-transformation-list").innerHTML=""},clearAttributeTransformations=function(attributeSelectId){document.getElementById("attribute-transformation-list").innerHTML="";const attribute=document.getElementById(attributeSelectId).value;attributeTransform[attribute]&&delete attributeTransform[attribute]},deleteTransformation=function(deleteBtn){const transformationItem=deleteBtn.parentElement,selectedAttribute=document.getElementById("remodel-network-select").value,transformationItemIndex=$(transformationItem).index();attributeTransform[selectedAttribute].splice(transformationItemIndex,1);transformationItem.remove()},transformationDragStart=function(e){var index=$(e.currentTarget).index();e.dataTransfer.setData("text/plain",index)},transformationDrop=function(e){cancelDefaultBehaviour(e);const selectedAttribute=document.getElementById("remodel-network-select").value;this.classList.remove("transformation-dragover");const oldIndex=parseInt(e.dataTransfer.getData("text/plain")),target=$(e.currentTarget),newIndex=target.index();if(newIndex!==oldIndex){const transformArray=attributeTransform[selectedAttribute],temp=transformArray[newIndex];transformArray[newIndex]=transformArray[oldIndex];transformArray[oldIndex]=temp;let dropped=$(this).parent().children().eq(oldIndex).remove();newIndex<oldIndex?target.before(dropped):target.after(dropped)}},transformationDragOver=function(e){cancelDefaultBehaviour(e);this.classList.add("transformation-dragover")},transformationDragLeave=function(e){cancelDefaultBehaviour(e);this.classList.remove("transformation-dragover")},addToTransformationList=function(attribute,transformationType){attribute in attributeTransform||(attributeTransform[attribute]=[]);attributeTransform[attribute].push(transformationType)},addTransformationElement=function(transformationListId,transformationType,transformationName){const newTransformationListItem=d3.select("#"+transformationListId).append("li").classed("transformation-li",!0).attr("draggable",!0).attr("data-role",transformationType);newTransformationListItem.node().addEventListener("dragstart",transformationDragStart,!0);newTransformationListItem.node().addEventListener("drop",transformationDrop,!0);newTransformationListItem.node().addEventListener("dragover",transformationDragOver,!0);newTransformationListItem.node().addEventListener("dragenter",cancelDefaultBehaviour,!0);newTransformationListItem.node().addEventListener("dragleave",transformationDragLeave,!0);newTransformationListItem.append("h5").text(transformationName);newTransformationListItem.append("button").text("Delete").on("click",function(){deleteTransformation(this)})},addTransformation=function(transformationBtn,attributeSelectId,transformationListId){const transformationControlElement=transformationBtn.parentElement,transformationName=transformationControlElement.firstElementChild.innerHTML,transformationType=transformationControlElement.getAttribute("data-role"),attributeSelect=document.getElementById(attributeSelectId),attribute=attributeSelect.value;attribute!==""&&attribute!==undefined&&(addToTransformationList(attribute,transformationType),addTransformationElement(transformationListId,transformationType,transformationName))},addTransformationToAll=function(transformationBtn,attributeSelectId){const transformationControlElement=transformationBtn.parentElement,transformationName=transformationControlElement.firstElementChild.innerHTML,transformationType=transformationControlElement.getAttribute("data-role"),attributeSelect=document.getElementById(attributeSelectId),selectedAttribute=attributeSelect.value;if(selectedAttribute!==""&&selectedAttribute!==undefined){for(let attribute of attributeSelect.options)addToTransformationList(attribute.value,transformationType);addTransformationElement("attribute-transformation-list",transformationType,transformationName)}},remodelNetwork=function(checkboxesDivId,algorithmSelectId,metricSelectId,nulifyId){const selectedAlgorithm=document.getElementById(algorithmSelectId).value,selectedMetric=document.getElementById(metricSelectId).value,nulify=document.getElementById(nulifyId).checked,networkRemodelParams={metric:{name:selectedMetric,params:[],nulify:nulify},algorithm:{name:selectedAlgorithm,params:[]}};switch(selectedMetric){case"GaussKernel":const metricParams=networkRemodelParams.metric.params,sigma=parseFloat(document.getElementById("sigma").value);metricParams.push(sigma)}const selectedParametersDiv=selectedAlgorithm.toLowerCase()+"-parameters-remodel",algorithmParametersDiv=document.getElementById(selectedParametersDiv),parameterInputs=algorithmParametersDiv.querySelectorAll("input[type=number]"),algorithmParams=networkRemodelParams.algorithm.params;for(const parameter of parameterInputs)algorithmParams.push(parseFloat(parameter.value));const nodes_string=JSON.stringify(dataStore.nodeData),attributes_string=JSON.stringify(currentGraph.attributes),attribute_transform_string=JSON.stringify(attributeTransform),network_remodel_params_string=JSON.stringify(networkRemodelParams),excluded_attributes_string=JSON.stringify(excludedAttributes);$.ajax({url:"/Home/RemodelNetwork",type:"POST",data:{nodes:nodes_string,attributes:attributes_string,attributeTransform:attribute_transform_string,networkRemodelParams:network_remodel_params_string,excludedAttributes:excluded_attributes_string},success:function(result){if(result.newVectorData!=""){const newVectorData=JSON.parse(result.newVectorData);dataStore.nodes=newVectorData}const newNet=JSON.parse(result.newNetwork);currentGraph.links=newNet;currentGraph.updateLinkIndeces();updateNodesAndLinks();requestCommunityDetection(currentGraph);calculateAllMetrics();startSimulation()},error:function(xhr,ajaxOptions,thrownError){alert(thrownError)}})},freedmanDiaconisRule=function(currentGraph,attribute){let IQRValue=IQR(nodes,attribute);return IQRValue===0&&(IQRValue=IQRValue+1),Math.ceil(2*IQRValue*Math.pow(nodes.length,-1/3))},sigmaG1=function(n){return Math.sqrt(6*(n-2)/((n+1)*(n+3)))},dormanFormula=function(attributeValues){const nodeCount=attributeValues.length,attributeSkewness=skewness(attributeValues),attributeSigmaG1=sigmaG1(nodeCount);return 1+Math.log2(nodeCount)+Math.log2(1+Math.abs(attributeSkewness)/attributeSigmaG1)},hist=function(containerDivId,currentGraph,attribute,svgWidth,svgHeight){const attributeValues=currentGraph.getAllAttributeValues(attribute),nBins=dormanFormula(attributeValues),histogramMargin={top:10,right:10,bottom:20,left:25},histogramWidth=svgWidth-(histogramMargin.left+histogramMargin.right),histogramHeight=svgHeight-(histogramMargin.top+histogramMargin.bottom),xMin=d3.min(attributeValues),xMax=d3.max(attributeValues),xAxis=createLinearAxis(xMin,xMax,0,histogramWidth),histogram=d3.histogram().domain(xAxis.domain()).thresholds(xAxis.ticks(nBins)),bins=histogram(attributeValues),yMax=d3.max(bins,function(d){return d.length}),yAxis=createLinearAxis(0,yMax,histogramHeight,0),plotContainer=getPlotContainer(containerDivId),histogramSvg=createGraphSvg(plotContainer,svgWidth,svgHeight,histogramMargin,attribute);appendGraphXAxis(histogramSvg,xAxis,0,histogramHeight);appendGraphYAxis(histogramSvg,yAxis,0,0);appendHistogramBins(histogramSvg,bins,histogramHeight,xAxis,yAxis)},appendHistogramBins=function(svg,bins,height,xAxis,yAxis){return svg.selectAll("rect").data(bins).enter().append("rect").attr("x",1).attr("data-max-value",function(d){return d.x1}).attr("transform",function(d){return"translate("+xAxis(d.x0)+","+yAxis(d.length)+")"}).attr("width",function(d){return xAxis(d.x1)-xAxis(d.x0)-1}).attr("height",function(d){return height-yAxis(d.length)}).style("fill","#ffeead"),svg},barplot=function(containerDivId,data,yMin,yMax,svgWidth,svgHeight,cluster){const barplotMargin={top:10,right:10,bottom:30,left:25},barplotWidth=svgWidth-(barplotMargin.left+barplotMargin.right),barplotHeight=svgHeight-(barplotMargin.top+barplotMargin.bottom),xAxis=createBandAxis(data.map(d=>d.className),0,barplotWidth),yAxis=createLinearAxis(yMin,yMax,barplotHeight,0),plotContainer=getPlotContainer(containerDivId),barplotSvg=createGraphSvg(plotContainer,svgWidth,svgHeight,barplotMargin,cluster),axisColour="white";appendGraphXAxis(barplotSvg,xAxis,0,barplotHeight,axisColour,!0);appendGraphYAxis(barplotSvg,yAxis,0,0,axisColour);appendLine(barplotSvg,0,barplotWidth,yAxis(0),yAxis(0),axisColour);const tooltip=createTooltip(plotContainer,cluster),mouseenter=createBarplotTooltipMouseEnter(tooltip),mousemove=createTooltipMousemove(tooltip),mouseleave=createTooltipMouseleave(tooltip);createBars(barplotSvg,data,xAxis,yAxis,barplotHeight,"#ffeead",mouseenter,mousemove,mouseleave)},createBars=function(svg,data,xAxis,yAxis,height,fillColor,mouseenter=null,mousemove=null,mouseleave=null){gBars=svg.selectAll("mybar").data(data).enter().append("g");gBars.append("rect").attr("x",d=>xAxis(d.className)).attr("y",()=>yAxis(1)).attr("width",xAxis.bandwidth()).attr("height",()=>Math.abs(yAxis(1)-yAxis(-1))).attr("fill-opacity",0).attr("stroke-opacity",0).attr("stroke","black").on("mouseenter",mouseenter).on("mousemove",mousemove).on("mouseleave",mouseleave);return gBars.append("rect").attr("x",d=>xAxis(d.className)).attr("y",d=>yAxis(Math.max(0,d.value))).attr("width",xAxis.bandwidth()).attr("height",d=>Math.abs(yAxis(d.value)-yAxis(0))).attr("fill",fillColor).attr("pointer-events","none"),svg},boxplot=function(plotContainer,data,svgWidth,svgHeight,id){const boxplotMargin={top:10,right:25,bottom:50,left:25},boxplotWidth=svgWidth-(boxplotMargin.left+boxplotMargin.right),boxplotHeight=svgHeight-(boxplotMargin.top+boxplotMargin.bottom);let yMin=d3.min(data,function(d){return d.value.min}),yMax=d3.max(data,function(d){return d.value.max});const attributeRangePortion=(yMax-yMin)*.05;yMin-=attributeRangePortion;yMax+=attributeRangePortion;const xAxis=createBandAxis(data.map(d=>d.key),0,boxplotWidth,.5),yAxis=createLinearAxis(yMin,yMax,boxplotHeight,0),boxplotSvgId=`partition-metric-boxplot-svg-${id}`,tooltipId=`${boxplotSvgId}-tooltip`,tooltip=createTooltip(plotContainer,tooltipId),mouseenter=createBoxplotTooltipMouseEnter(tooltip),mousemove=createTooltipMousemove(tooltip),mouseleave=createBoxplotTooltipMouseleave(tooltip),boxplotSvg=createGraphSvg(plotContainer,svgWidth,svgHeight,boxplotMargin,boxplotSvgId),axisColour="white";appendGraphXAxis(boxplotSvg,xAxis,0,boxplotHeight,axisColour,!1);appendGraphYAxis(boxplotSvg,yAxis,0,0,axisColour);appendGraphYAxis(boxplotSvg,yAxis,boxplotWidth,0,axisColour);const boxContainers=boxplotSvg.selectAll("boxesG").data(data).enter().append("g").on("mouseenter",mouseenter).on("mousemove",mousemove).on("mouseleave",mouseleave);appendBoxplotRects(boxContainers,xAxis,yAxis,data,axisColour);appendMedianBoxplotLine(boxContainers,"median",xAxis,yAxis,axisColour);appendVerticalBoxplotLines(boxContainers,xAxis,yAxis,axisColour);appendMinBoxplotLine(boxContainers,xAxis,yAxis,axisColour);appendMaxBoxplotLine(boxContainers,xAxis,yAxis,axisColour)},appendBoxplotRects=function(svg,xAxis,yAxis,fillColour,strokeColour){svg.append("rect").attr("x",function(d){return xAxis(d.key)}).attr("y",function(d){return yAxis(d.value.q3)}).attr("width",xAxis.bandwidth()).attr("height",function(d){return yAxis(d.value.q1)-yAxis(d.value.q3)}).style("fill",function(){return fillColour}).style("stroke",strokeColour)},updateBoxplotColour=function(boxplots,colourObject){boxplots.selectAll("rect").style("fill",function(d){return colourObject[d.key]})},createTooltip=function(plotContainer,id){return plotContainer.append("div").attr("class","plot-tooltip").attr("id",`${id}-tooltip`)},createBarplotTooltipMouseEnter=function(tooltip){return function(d){const{className,value}=d;d3.select(this).style("stroke-opacity",1);tooltip.html("Class: "+className+"<br>Value: "+value.toFixed(2)).style("opacity",1)}},createTooltipMousemove=function(tooltip){return function(){tooltip.style("left",d3.mouse(this)[0]+20+"px").style("top",d3.mouse(this)[1]+11+"px")}},createTooltipMouseleave=function(tooltip){return function(){d3.select(this).style("stroke-opacity",0);tooltip.style("opacity",0)}},createBoxplotTooltipMouseEnter=function(tooltip){return function(d){const{}=d;d3.select(this).selectAll("*").style("stroke","black");const text=`Median: ${d.value.median.toFixed(2)} <br>
                      Q1: ${d.value.q1.toFixed(2)} <br>
                      Q3: ${d.value.q3.toFixed(2)} <br>
                      IQR: ${d.value.IQR.toFixed(2)} <br>
                      min: ${d.value.min.toFixed(2)} <br>
                      max: ${d.value.max.toFixed(2)}`;tooltip.html(text).style("opacity",1)}},createBoxplotTooltipMouseleave=function(tooltip){return function(){d3.select(this).selectAll("*").style("stroke","white");tooltip.style("opacity",0)}},getPlotContainer=function(containerDivId){return d3.select(`#${containerDivId}`)},createGraphSvg=function(plotContainer,width,height,margin,attribute,id){return plotContainer.append("svg").attr("width","100%").attr("height",height+margin.top+margin.bottom).attr("data-attribute",attribute).attr("id",id).attr("viewBox",[0,0,width,height]).append("g").attr("transform","translate("+margin.left+","+margin.top+")")},appendGraphXAxis=function(svg,axis,translateX,translateY,colour="black",hideLabels=false){const axisBot=d3.axisBottom(axis);hideLabels&&axisBot.tickFormat("");const resultAxis=svg.append("g").attr("transform","translate("+translateX+","+translateY+")").call(axisBot);return resultAxis.selectAll(".domain,.tick line").attr("stroke",colour),resultAxis.selectAll(".tick text").attr("fill",colour),resultAxis},tiltAxisText=function(axisGElement){return axisGElement.selectAll("text").attr("transform","translate(-10, 0) rotate(-90)").style("text-anchor","end"),axisGElement},appendGraphYAxis=function(svg,axis,translateX,translateY,colour="black"){const resultAxis=svg.append("g").attr("transform","translate("+translateX+","+translateY+")").call(d3.axisLeft(axis));return resultAxis.selectAll(".domain,.tick line").attr("stroke",colour),resultAxis.selectAll(".tick text").attr("fill",colour),resultAxis},appendLine=function(svg,x1,x2,y1,y2,colour="black"){svg.append("g").style("stroke",colour).append("line").attr("x1",x1).attr("x2",x2).attr("y1",y1).attr("y2",y2)},appendMedianBoxplotLine=function(svg,attributeName,xAxis,yAxis,colour="black"){return svg.append("line").attr("x1",function(d){return xAxis(d.key)}).attr("x2",function(d){return xAxis(d.key)+xAxis.bandwidth()}).attr("y1",function(d){return yAxis(d.value[attributeName])}).attr("y2",function(d){return yAxis(d.value[attributeName])}).style("stroke",colour)},appendMinBoxplotLine=function(svg,xAxis,yAxis,colour="black"){return svg.append("line").attr("x1",function(d){return xAxis(d.key)+xAxis.bandwidth()/3}).attr("x2",function(d){return xAxis(d.key)+xAxis.bandwidth()-xAxis.bandwidth()/3}).attr("y1",function(d){return yAxis(d.value.min)}).attr("y2",function(d){return yAxis(d.value.min)}).style("stroke",colour)},appendMaxBoxplotLine=function(svg,xAxis,yAxis,colour="black"){return svg.append("line").attr("x1",function(d){return xAxis(d.key)+xAxis.bandwidth()/3}).attr("x2",function(d){return xAxis(d.key)+xAxis.bandwidth()-xAxis.bandwidth()/3}).attr("y1",function(d){return yAxis(d.value.max)}).attr("y2",function(d){return yAxis(d.value.max)}).style("stroke",colour)},appendVerticalBoxplotLines=function(svg,xAxis,yAxis,colour="black"){return svg.append("line").attr("x1",function(d){return xAxis(d.key)+xAxis.bandwidth()/2}).attr("x2",function(d){return xAxis(d.key)+xAxis.bandwidth()/2}).attr("y1",function(d){return yAxis(d.value.max)}).attr("y2",function(d){return yAxis(d.value.min)}).style("stroke",colour)},createLinearAxis=function(domainMin,domainMax,rangeMin,rangeMax){return d3.scaleLinear().domain([domainMin,domainMax]).range([rangeMin,rangeMax])},createBandAxis=function(domainValues,rangeMin,rangeMax,padding=.2){return d3.scaleBand().range([rangeMin,rangeMax]).domain(domainValues).padding(padding)},Q1=function(attributeValueList){const attributeValueListCount=attributeValueList.length,Q1Index=Math.floor(attributeValueListCount/4);if(Q1Index%2==0){const Q1Index2=Q1Index-1;return(attributeValueList[Q1Index]+attributeValueList[Q1Index2])/2}return attributeValueList[Q1Index]},Q3=function(attributeValueList){const attributeValueListCount=attributeValueList.length,Q3Index=Math.floor(attributeValueListCount*(3/4));if(Q3Index%2==0){const Q3Index2=Q3Index-1;return(attributeValueList[Q3Index]+attributeValueList[Q3Index2])/2}return attributeValueList[Q3Index]},IQR=function(currentGraph,attribute){const attributeValueList=getAttributeValueList(nodes,attribute);return attributeValueList.length<=2?-1:(attributeValueList.sort(),Q3(attributeValueList)-Q1(attributeValueList))},mean=function(attributeValues){let result=0;for(const value of attributeValues)result+=value;return result/=attributeValues.length},standardDeviation=function(attributeValues,iMean=null){let result=0,attributeMean=iMean===null?mean(attributeValues):iMean;for(const value of attributeValues){const difference=value-attributeMean;result+=Math.pow(difference,2)}return result/=attributeValues.length-1},skewness=function(attributeValues){let result=0;const attributeMean=mean(attributeValues),attributeStd=standardDeviation(attributeValues,attributeMean);for(const value of attributeValues){const difference=value-attributeMean;result+=Math.pow(difference,3)}return result/=(attributeValues.length-1)*Math.pow(attributeStd,3)},closeAllToolbarPanels=function(){$(".toolbar-panel.active-flex").removeClass("active-flex")},toggleToolPanel=function(e,toolPanelId){e.stopPropagation();closeAllToolbarPanels();$("#"+toolPanelId).toggleClass("active-flex")},openFileBrowser=function(inputId){document.getElementById(inputId).click()},generateGraphControlAndElements=function(graph,forceProperties,filters){generateGraphElements(graph);generateGraphControls(graph,forceProperties,filters)},generateGraphElements=function(graph){generateNodeHeadings(graph);generateNodeDetails(graph)},generateNodeDetails=function(graph){const nodeAttributesDiv=d3.select("#node-attributes"),{numAttributes,catAttributes}=graph.attributes;for(const attribute of numAttributes){generateNodeDetailDisplayElements(nodeAttributesDiv,attribute);const containerDivId=attribute+"-histogram-container";nodeAttributesDiv.append("div").attr("id",containerDivId);hist(containerDivId,graph.nodes,attribute,300,250)}for(const attribute of catAttributes)generateNodeDetailDisplayElements(nodeAttributesDiv,attribute)},generateNodeDetailDisplayElements=function(nodeAttributesDiv,attribute){const attributeDiv=nodeAttributesDiv.append("div").classed("node-property-group",!0);attributeDiv.append("label").attr("title",attribute).attr("for","display-"+attribute).html(attribute+":");attributeDiv.append("input").attr("type","text").attr("id","display-"+attribute).attr("value","").attr("data-attribute",attribute).property("readonly",!0)},generateNodeHeadings=function(graph){const nodeHeadingsList=d3.select("#node-list");for(const node of graph.nodes)const{id,index}=node,nodeHeading=nodeHeadingsList.append("li").classed("node-li",!0).attr("id","node-li-"+node.id).on("mousedown",function(){nodeHeadingClick(id,index)}).html(id)},generateGraphControls=function(graph,forceProperties,filters){const{x,y}=forceProperties.center;updateForceControlValue("center_XSliderOutput",x);updateForceControlValue("center_YSliderOutput",y);const{strength:chargeStrength,enabled:chargeEnabled,distanceMin,distanceMax}=forceProperties.charge;updateForceState("charge_EnabledCheckbox",chargeEnabled);updateForceControlValue("charge_StrengthSliderOutput",chargeStrength);updateForceControlValue("charge_distanceMinSliderOutput",distanceMin);updateForceControlValue("charge_distanceMaxSliderOutput",distanceMax);const{strength:collideStrength,enabled:collideEnabled,radius,iterations:collideIterations}=forceProperties.collide;updateForceState("collide_EnabledCheckbox",collideEnabled);updateForceControlValue("collide_StrengthSliderOutput",collideStrength);updateForceControlValue("collide_radiusSliderOutput",radius);updateForceControlValue("collide_iterationsSliderOutput",collideIterations);const{enabled:linksEnabled,distance,iterations:linkIterations}=forceProperties.link;updateForceState("link_EnabledCheckbox",linksEnabled);updateForceControlValue("link_DistanceSliderOutput",distance);updateForceControlValue("link_IterationsSliderOutput",linkIterations);const{attributes}=graph,{numAttributes,catAttributes}=attributes,allAttributes=[...new Set([...numAttributes,...catAttributes])],{attribute:xAttribute}=forceProperties.forceX;updateForceAttributeList("project-x-attributes",numAttributes,xAttribute);const{attribute:yAttribute}=forceProperties.forceY;updateForceAttributeList("project-y-attributes",numAttributes,yAttribute);const{attribute:labelAttribute}=forceProperties.labels,labelForceSelect=updateForceAttributeList("node-label-select",allAttributes,labelAttribute);setNodeLabel(labelForceSelect);const{attribute:sizingAttribute}=forceProperties.sizing,sizingForceSelect=updateForceAttributeList("attribute-node-sizing",numAttributes,sizingAttribute);setAttributeNodeSizing(sizingForceSelect);const{network,background}=forceProperties.colouring;updateColourControl("network-colour-input",network);updateColourControl("background-colour-input",background);changeNetworkBackgroundColour(background);const{attribute:colouringAttribute,lowValue,highValue}=forceProperties.attributeColouring,colouringForceSelect=updateColouringForceAttributeList("attribute-node-colouring",attributes,colouringAttribute);updateColouringColourInputs(lowValue,highValue);setAttributeNodeColouring(colouringForceSelect);generateAttributeFilters(filters);generateRemodelAttributes(graph)},updateForceControlValue=function(forceControlId,forcePropertiesValue){const forceOutput=document.getElementById(forceControlId),forceSlider=forceOutput.nextElementSibling;forceOutput.innerHTML=forceSlider.value=forcePropertiesValue},updateForceState=function(forceCheckboxId,state){const forceCheckbox=document.getElementById(forceCheckboxId);forceCheckbox.checked=state},updateForceAttributeList=function(forceSelectId,attributes,chosenAttribute){const forceSelect=d3.select("#"+forceSelectId),attributeOptGroup=forceSelect.select("optgroup[label=Attributes]");for(const attribute of attributes)attributeOptGroup.append("option").property("value",attribute).html(attribute);return forceSelect.property("value",chosenAttribute),forceSelect.node()},updateColouringForceAttributeList=function(forceSelectId,attributes,chosenAttribute){const forceSelect=d3.select("#"+forceSelectId),{numAttributes}=attributes,numericAttributeOptGroup=forceSelect.select('optgroup[label="Numeric Attributes"]');for(const attribute of numAttributes)numericAttributeOptGroup.append("option").property("value",attribute).html(attribute);return forceSelect.property("value",chosenAttribute),forceSelect.node()},updateColouringColourInputs=function(lowColour,highColour){document.getElementById("low-value-colour").value=lowColour;document.getElementById("high-value-colour").value=highColour},updateColourControl=function(forceColourId,colourValue){document.getElementById(forceColourId).value=colourValue},generateAttributeFilters=function(filters){const filtersDiv=d3.select("#attributes");for(const numericAttribute of filters.numeric){const{attribute,min,max,lowValue,highValue}=numericAttribute,numericDiv=filtersDiv.append("div").classed("numeric",!0);numericDiv.append("h4").html(attribute);numericDiv.append("div").attr("id",attribute+"-slider");const sliderOutputsDiv=numericDiv.append("div").classed("row",!0);createDoubleSlider(attribute+"-slider",attribute+"-sliderOutputMin",attribute+"-sliderOutputMax",min,max,lowValue,highValue);sliderOutputsDiv.append("div").classed("col-md-4",!0).append("input").attr("type","number").attr("id",attribute+"-sliderOutputMin").property("min",min).property("max",max).property("value",lowValue).attr("step","0.01").on("change",function(){$("#"+attribute+"-slider").slider("option","value",this.value);filterByValue(this,attribute,FilterCondition.lower,!1)});sliderOutputsDiv.append("div").classed("col-md-4 offset-md-4",!0).append("input").attr("type","number").attr("id",attribute+"-sliderOutputMax").property("min",min).property("max",max).property("value",highValue).attr("step","0.01").on("change",function(){$("#"+attribute+"-slider").slider("option","value",this.value);filterByValue(this,attribute,FilterCondition.greater,!0)})}for(const categoricalAttribute of filters.categorical){const{attribute,categories}=categoricalAttribute,categoricalDiv=filtersDiv.append("div").classed("categorical",!0);categoricalDiv.append("h4").html(attribute);const categoriesDiv=categoricalDiv.append("div").classed("checkboxes",!0);for(const[category,checked]of Object.entries(categories))categoriesDiv.append("label").attr("for",category+"-checkbox").html(category),categoriesDiv.append("input").attr("type","checkbox").attr("id",category+"-checkbox").property("value",category).on("change",function(){filterByCategory(attribute,category,this.checked)}).property("checked",checked)}},generateRemodelAttributes=function(graph){const remodelAttributesSelect=d3.select("#remodel-network-select"),{numAttributes}=graph.attributes;for(const attribute of numAttributes)remodelAttributesSelect.append("option").html(attribute)},deleteGraphElementsAndControls=function(){deleteAllSelections();deleteNodeDetailsAttributes();deleteNodeHeadings();for(const select of["project-x-attributes","project-y-attributes","node-label-select",,"attribute-node-colouring"])deleteForceAttributeList(select);deleteColourListsAndAttributes();clearElement("attributes");deleteRemodelAttributes()},deleteNodeDetailsAttributes=function(){clearElement("node-attributes");clearElement("neighbors-nav")},deleteNodeHeadings=function(){document.getElementById("node-list-input").value="";clearElement("node-list")},deleteVisualsListsAndAttributes=function(){for(const listID of["categorical-colour-list","class-colour-list"])clearElement(listID);clearElement("categorical-attribute-node-colouring");deleteForceAttributeList("attribute-node-colouring");deleteForceAttributeList("attribute-node-sizing")},deleteForceAttributeList=function(forceSelectId){d3.select("#"+forceSelectId).selectAll('optgroup[label]:not([label="Centralities"])').html("")},deleteRemodelAttributes=function(){for(const attribute in attributeTransform)delete attributeTransform[attribute];excludedAttributes.length=0;clearElement("remodel-network-select");clearElement("attribute-transformation-list");clearElement("remodel-attribute-checkboxes")};class DataStore{constructor(data){this._nodeData=data.nodes;this._linkData=data.links}get nodeData(){return this._nodeData}set nodeData(value){this._nodeData=value}get linkData(){return this._linkData}getNodeDataValue(id,attribute){return this._nodeData[id][attribute]}getLinkDataValue(id,attribute){return this._linkData[id][attribute]}addNewNodeAttribute(id,attribute,value){this._nodeData[id][attribute]=value}removeNodeAttribute(id,attribute){delete this._nodeData[id][attribute]}addNewLinkAttribute(id,attribute,value){this._linkData[id][attribute]=value}removeLinkAttribute(id,attribute){delete this._linkData[id][attribute]}serialize(){return{nodeData:this._nodeData,linkData:this._linkData}}}